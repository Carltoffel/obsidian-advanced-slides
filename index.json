[
{
	"uri": "https://mszturc.github.io/obsidian-advanced-slides/features/autocomplete/",
	"title": "Auto Completion",
	"tags": [],
	"description": "",
	"content": " Your browser does not support the video tag. "
},
{
	"uri": "https://mszturc.github.io/obsidian-advanced-slides/getting-start/",
	"title": "Getting started",
	"tags": [],
	"description": "",
	"content": " Installation\nThe following steps are here to help you to install Advanced Slides Plugin for Obsidian. If you never installed a plguin at all, we strongly suggest you to read the guideline on Community Plugins. Obsidian Documentation on Community Plugins.\nSettings\nThe settings can be found under Advanced Slides Section inside Plugin Settings. The settings can be found by clicking the gear in the bottom left corner, or by hitting Ctrl/Cmd-,.\nMost of them are fairly self-explanatory, but here are some notes that might be helpful.\nWrite your first Slide\nStep by Step guide to create your first Presentation\nLearn more\nLearn more about the Advanced Slides from the following pages: Advanced Slides Basics How to use Advanced Slides plugin 用Obsidian做PPT，我是认真的 Advanced Slides 专业PPT制作课程来了 Building layouts Advanced Slides Advanced Using Templates in Advanced Slides Advanced Slides in Action Rust Talks by No Boilerplate Videos Source Talk: Use It or Lose It by Nicole van der Hoeven Video Slides CSS Course by RemyDekor Slides Deck: Estimating The Hemodynamic Response Function by Lynne J Williams Slides Source Deck: Basisprozesse beim Beraten und Entscheiden in Teams by Matthäus Szturc Slides Source Deck: Digital Culture Analyse 21 Slides Template Deck: The four Daggers Slides Deckset about Juggling by Marc Bielert Slides Deck: Hydrothermal Venture Slides Deck: ML Ops Examples by Sam Foreman Slides Source Deck: Scientific Data Science by Sam Foreman Slides Source "
},
{
	"uri": "https://mszturc.github.io/obsidian-advanced-slides/basic-syntax/heading/",
	"title": "Headers",
	"tags": [],
	"description": "",
	"content": "# This is a heading 1 ## This is a heading 2 ### This is a heading 3 #### This is a heading 4 ##### This is a heading 5 ###### This is a heading 6 # This is a heading 1 ## This is a heading 2 ### This is a heading 3 #### This is a heading 4 ##### This is a heading 5 ###### This is a heading 6 See it fullscreen "
},
{
	"uri": "https://mszturc.github.io/obsidian-advanced-slides/extend-syntax/slides/",
	"title": "Horizontal / Vertical Slides",
	"tags": [],
	"description": "",
	"content": "To create a horizontal slide use three dashes surrounded by two blank lines. To create vertical slides use two dashes surrounded by two blank lines:\n# Slide 1 --- # Slide 2.1 -- # Slide 2.2 # Slide 1 --- # Slide 2.1 -- # Slide 2.2 See it fullscreen It is possible to change the vertical / horizontal slide separator by changing the separator or verticalSeparator property in frontmatter see yaml docs "
},
{
	"uri": "https://mszturc.github.io/obsidian-advanced-slides/getting-start/installation/",
	"title": "Installation",
	"tags": [],
	"description": "",
	"content": "The following steps are here to help you to install Advanced Slides Plugin for Obsidian. If you never installed a plguin at all, we strongly suggest you to read the guideline on Community Plugins. Obsidian Documentation on Community Plugins.\nWith Community Plugins Search for Advanced Slides in Community Plugins and hit install and enable While Installation Advanced Slides will download the runtime to create \u0026amp; display Slide Presentations. Make sure that your VPN/Proxy allows https connections on github.com. Configuration Follow instructions here\n"
},
{
	"uri": "https://mszturc.github.io/obsidian-advanced-slides/plugins/menu/",
	"title": "Menu",
	"tags": [],
	"description": "",
	"content": "A slideout menu plugin for Advanced Slides to quickly jump to any slide by title.\nTo enable Menu you have to enable the Plugin in Advanced Slides Settings "
},
{
	"uri": "https://mszturc.github.io/obsidian-advanced-slides/layout/split/",
	"title": "Split Component",
	"tags": [],
	"description": "",
	"content": "By using the \u0026lt;split\u0026gt; tag you are able to split the content of your slide in rows and columns\nAttributes even By setting the even attribute the Content of the split element gets divided evenly:\n\u0026lt;split even\u0026gt; ![](https://picsum.photos/id/1005/250/250) ![](https://picsum.photos/id/1010/250/250) ![](https://picsum.photos/id/1025/250/250) \u0026lt;/split\u0026gt; Example: In a split with 3 children every child takes 1/3 of the availible width of the slide\ngap By adding the gap attribute there will be a gap between each element:\n\u0026lt;split even gap=\u0026#34;3\u0026#34;\u0026gt; **Lorem Ipsum** is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry\u0026#39;s standard dummy text ever since the 1500s when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem \u0026lt;/split\u0026gt; Example: In this split is a gap of 3em between each element\nleft \u0026amp; right If you want to split a slide proportionally you can do that with left and right attributes. Left and right represent the proportions of the slide columns:\n\u0026lt;split left=\u0026#34;2\u0026#34; right=\u0026#34;1\u0026#34; gap=\u0026#34;2\u0026#34;\u0026gt; **Lorem Ipsum** is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry\u0026#39;s standard dummy text ever since the 1500s when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem \u0026lt;/split\u0026gt; Example: In this split the left elements width is twice as big as the width of the right element\nwrap By adding a wrap attribute you can define after how many children an new row should start:\n\u0026lt;split wrap=\u0026#34;4\u0026#34;\u0026gt; ![](https://picsum.photos/id/1010/250/250) ![](https://picsum.photos/id/1011/250/250) ![](https://picsum.photos/id/1012/250/250) ![](https://picsum.photos/id/1013/250/250) ![](https://picsum.photos/id/1014/250/250) ![](https://picsum.photos/id/1015/250/250) \u0026lt;/split\u0026gt; Example: This split has 2 rows. The first one has 4 pictures in it, the second one the other 2.\nno-margin By adding no margin attribute automatic gaps between rows and column gets removed:\n\u0026lt;split no-margin\u0026gt; ![](https://picsum.photos/id/1001/250/250) ![](https://picsum.photos/id/1002/250/250) ![](https://picsum.photos/id/1003/250/250) ![](https://picsum.photos/id/1004/250/250) ![](https://picsum.photos/id/1005/250/250) ![](https://picsum.photos/id/1006/250/250) ![](https://picsum.photos/id/1009/250/250) ![](https://picsum.photos/id/1008/250/250) \u0026lt;/split\u0026gt; Example: This split has no gaps between rows and columns.\nSplit Component in Action Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard\nwhen an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not\ninto electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap\ninto electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem See it fullscreen "
},
{
	"uri": "https://mszturc.github.io/obsidian-advanced-slides/basic-syntax/",
	"title": "Basic Markdown Syntax",
	"tags": [],
	"description": "",
	"content": "Index\nHeaders Text style Lists Images Video Links Embeds Blockquotes Inline Code Tables CodeBlocks Footnotes Math Mermaid Callouts "
},
{
	"uri": "https://mszturc.github.io/obsidian-advanced-slides/extend-syntax/classes/",
	"title": "Element Annotations",
	"tags": [],
	"description": "",
	"content": "text with border \u0026lt;!-- element class=\u0026#34;with-border\u0026#34; --\u0026gt; text with background \u0026lt;!-- element style=\u0026#34;background:blue\u0026#34; --\u0026gt; text with attribute \u0026lt;!-- element data-toggle=\u0026#34;modal\u0026#34; --\u0026gt; "
},
{
	"uri": "https://mszturc.github.io/obsidian-advanced-slides/features/embedslide/",
	"title": "Embed Slides",
	"tags": [],
	"description": "",
	"content": "Embed Slides into Obsidian Note By using slide code blocks you are able to embed an slide into an obsidian note. As parameter you have to specify the reference to the slides and the page you want to dislay\nExample ```slide { slide: [[Presentation]], page: 7 } ``` When using horizontal \u0026amp; vertical slides you can specify a page as following: 3/6\nThis would show the 6th vertical slide on the 3rd horizontal position.\n"
},
{
	"uri": "https://mszturc.github.io/obsidian-advanced-slides/layout/grid/",
	"title": "Grid Component",
	"tags": [],
	"description": "",
	"content": "By using the \u0026lt;grid\u0026gt; tag you are able to layout the content of your slide in parts.\nConcept Grid layouts drag-and-drop is used to size and position content of your slides.\nDrag to size a block of content on your slide, then Drop to position that block anywhere on the slide. Basic Syntax The following syntax is used to drag-and-drop a grid in Advanced Slides:\n\u0026lt;grid drag=\u0026quot;width height\u0026quot; drop=\u0026quot;x y\u0026quot;\u0026gt; The width and height values of the drag property define the size of the area in which the content will be displayed. The x and y values ​​of the drop property define the position on the slide where the content should be inserted.\nBy default, it is assumed that the values ​​are percentages based on the size of the slide. Append px to the values for pixel sizes. Position by Coordinates Both positive and negative values can be set for x and y on the drop property. The meaning of positive and negative values in each case is summarized as follows:\nA positive x value indicates a position relative to the left edge of the slide. A negative x value indicates a position relative to the right edge of the slide. A positive y value indicates a position relative to the top edge of the slide. A negative y value indicates a position relative to the bottom edge of the slide. The following sample slide helps to clarify these concepts:\n\u0026lt;grid drag=\u0026#34;60 55\u0026#34; drop=\u0026#34;5 10\u0026#34; bg=\u0026#34;red\u0026#34;\u0026gt; 60 x 55 \u0026lt;/grid\u0026gt; \u0026lt;grid drag=\u0026#34;25 55\u0026#34; drop=\u0026#34;-5 10\u0026#34; style=bg=\u0026#34;green\u0026#34;\u0026gt; 25 x 55 \u0026lt;/grid\u0026gt; \u0026lt;grid drag=\u0026#34;90 20\u0026#34; drop=\u0026#34;5 -10\u0026#34; bg=\u0026#34;gray\u0026#34;\u0026gt; 90 x 20 \u0026lt;/grid\u0026gt; Position by Name Some common grid positions have been named for your convenience. Named positions can be used in place of x and y coordinates on the drop property. The following named positions are currently defined:\ncenter top bottom left right topleft topright bottomleft bottomright The following sample slide helps to clarify these concepts:\n\u0026lt;grid drag=\u0026#34;40 30\u0026#34; drop=\u0026#34;topleft\u0026#34; bg=\u0026#34;red\u0026#34;\u0026gt; Top Left \u0026lt;/grid\u0026gt; \u0026lt;grid drop=\u0026#34;right\u0026#34; bg=\u0026#34;green\u0026#34;\u0026gt; Right with default size \u0026lt;/grid\u0026gt; \u0026lt;grid drag=\u0026#34;80 30\u0026#34; drop=\u0026#34;bottom\u0026#34; bg=\u0026#34;coral\u0026#34;\u0026gt; Bottom \u0026lt;/grid\u0026gt; When drap property is not specified, grid component uses a default size of 50 100 Flow The following syntax is used to define a custom flow for a grid:\n\u0026lt;grid drag=\u0026quot;width height\u0026quot; drop=\u0026quot;x y\u0026quot; flow=\u0026quot;col | row\u0026quot;\u0026gt; Using a value of col or row for the flow property defines the layout behavior for the grid. If the flow property is not specified then the grid automatically inherits the default col flow behavior.\nColumn Flow When flow=\u0026quot;col\u0026quot; the following layout and spacing behaviors occur within the grid:\nChildren are rendered vertically within the grid An equal amount of space is injected between each child An equal amount of space is injected at the start and end of the grid The following sample slide helps to clarify these concepts:\n\u0026lt;grid drag=\u0026#34;40 100\u0026#34; drop=\u0026#34;center\u0026#34; bg=\u0026#34;coral\u0026#34; flow=\u0026#34;col\u0026#34;\u0026gt; Heading ![[Image.jpg]] **Lorem Ipsum** is simply dummy text \u0026lt;/grid\u0026gt; Row Flow When flow=row the following layout and spacing behaviors occur within the grid:\nChildren are rendered horizontally within the grid. An equal amount of space is injected between each child An equal amount of space is injected at the start and end of the grid The following sample slide helps to clarify this concept. Note, the grid width here is 100% of the slide width:\nThe following sample slide helps to clarify these concepts:\n\u0026lt;grid drag=\u0026#34;100 40\u0026#34; drop=\u0026#34;center\u0026#34; bg=\u0026#34;coral\u0026#34; flow=\u0026#34;row\u0026#34;\u0026gt; Left ![[Image.jpg]] **Lorem Ipsum** is simply dummy text \u0026lt;/grid\u0026gt; Attributes Background The grid bg property is used to define a custom background for a grid. Children added to the grid are rendered on top of the background.\n\u0026lt;grid drag=\u0026quot;width height\u0026quot; drop=\u0026quot;x y\u0026quot; bg=\u0026quot;color\u0026quot;\u0026gt; Where the color option of the bg property takes any valid CSS Color Value. The following sample demonstrates color backgrounds:\n\u0026lt;grid drag=\u0026#34;55 50\u0026#34; drop=\u0026#34;topleft\u0026#34; bg=\u0026#34;orange\u0026#34;\u0026gt; ### Make \u0026lt;/grid\u0026gt; ### Noise \u0026lt;!-- element drag=\u0026#34;55 50\u0026#34; drop=\u0026#34;bottomright\u0026#34; bg=\u0026#34;rgb(0,0,0)\u0026#34;--\u0026gt; \u0026lt;grid drag=\u0026#34;25 20\u0026#34; drop=\u0026#34;center\u0026#34; bg=\u0026#34;green\u0026#34; rotate=\u0026#34;-15\u0026#34;\u0026gt; ### some \u0026lt;/grid\u0026gt; Border The grid border property is used to define a custom border for a grid section. Custom borders can help to highlight or differentiate grids on your slide.\n\u0026lt;grid drag=\u0026quot;width height\u0026quot; drop=\u0026quot;x y\u0026quot; border=\u0026quot;width style color\u0026quot;\u0026gt; Where the width option of the border property takes values of thin, medium, thick or a pixel value such as 10px. The style option takes values of dotted, solid, dashed, inset, or outset. And the color option takes any valid CSS Color Value.\nThe following sample demonstrates borders:\n\u0026lt;grid drag=\u0026#34;30 25\u0026#34; drop=\u0026#34;left\u0026#34; border=\u0026#34;thick dotted blue\u0026#34;\u0026gt; thick dotted blue \u0026lt;/grid\u0026gt; \u0026lt;grid drag=\u0026#34;30 25\u0026#34; drop=\u0026#34;center\u0026#34; border=\u0026#34;4px solid white\u0026#34;\u0026gt; 20px solid white \u0026lt;/grid\u0026gt; thick dotted blue \u0026lt;!-- element drag=\u0026#34;30 25\u0026#34; drop=\u0026#34;right\u0026#34; border=\u0026#34;medium dashed red\u0026#34;--\u0026gt; Animation The grid animate property is used to define a slide animation a grid section. The animation applies to the grid and all associated children.\n\u0026lt;grid drag=\u0026quot;width height\u0026quot; drop=\u0026quot;x y\u0026quot; animate=\u0026quot;type speed\u0026quot;\u0026gt; Where the type option of the animate property can take one of the following animation types:\nfadeIn fadeOut slideRightIn slideLeftIn slideUpIn slideDownIn slideRightOut slideLeftOut slideUpOut slideDownOut scaleUp scaleUpOut scaleDown scaleDownOut The speed option is optional. When specified it accepts a value of slower or faster. Opacity The grid opacity property is used to control the transparency of a grid section. Adjusting the opacity of a section also affects the opacity of all associated children.\n\u0026lt;grid drag=\u0026quot;width height\u0026quot; drop=\u0026quot;x y\u0026quot; opacity=\u0026quot;level\u0026quot;\u0026gt; Where the level option of the opacity property can take any value from 0.0 to 1.0. A grid section with an opacity value of 0.0 is invisible.\nFilter The grid filter property is used to define filter effects for a grid section. Filter effects on a grid section also affect all associated children.\n\u0026lt;grid drag=\u0026quot;width height\u0026quot; drop=\u0026quot;x y\u0026quot; filter=\u0026quot;effect\u0026quot;\u0026gt; Where the effect option of the filter property can take one of the following types:\nblur bright contrast grayscale hue invert saturate sepia The following sample demonstrates filters:\n\u0026lt;grid drag=\u0026#34;50 50\u0026#34; drop=\u0026#34;-12 -25\u0026#34; bg=\u0026#34;white\u0026#34; filter=\u0026#34;grayscale()\u0026#34;\u0026gt; ![[Image.jpg]] \u0026lt;/grid\u0026gt; Text is too blurry \u0026lt;!-- element drag=\u0026#34;30 25\u0026#34; drop=\u0026#34;5 15\u0026#34; bg=\u0026#34;#B565A7\u0026#34; filter=\u0026#34;blur(10px)\u0026#34; --\u0026gt; Rotate The grid rotate property is used to control the 2D rotation of a grid section. Rotation on a grid section also affect all associated children.\n\u0026lt;grid drag=\u0026quot;width height\u0026quot; drop=\u0026quot;x y\u0026quot; rotate=\u0026quot;deg\u0026quot;\u0026gt; Where the deg option of the rotate property is a postive or negative value indicates a degree of rotation from 0 to 360 degrees.\nThe following sample demonstrates rotation:\n\u0026lt;grid drag=\u0026#34;30 25\u0026#34; drop=\u0026#34;12 15\u0026#34; bg=\u0026#34;#B565A7\u0026#34; rotate=\u0026#34;-10\u0026#34;\u0026gt; Hello \u0026lt;/grid\u0026gt; World! \u0026lt;!-- element drag=\u0026#34;40 25\u0026#34; drop=\u0026#34;-12 -25\u0026#34; bg=\u0026#34;#D65076\u0026#34; rotate=\u0026#34;40\u0026#34; --\u0026gt; Padding The grid pad property is used to define custom padding for grid. Custom padding can help to enhance the overall appearance of content by controlling the space around grid children.\n\u0026lt;grid drag=\u0026quot;width height\u0026quot; drop=\u0026quot;x y\u0026quot; pad=\u0026quot;top right bottom left\u0026quot;\u0026gt; Where the top, right, bottom, and left options on the pad property all take pixel size values. Following standard CSS Padding Rules these four options can also be specified with just two values or even a single value, for example:\n\u0026lt;grid drag=\u0026quot;width height\u0026quot; drop=\u0026quot;x y\u0026quot; pad=\u0026quot;10px 15px\u0026quot;\u0026gt; This sample grid above would display with 10px padding top and bottom and 15px padding left and right. The following sample demonstrates padding:\n\u0026lt;grid drag=\u0026#34;50 50\u0026#34; drop=\u0026#34;topleft\u0026#34; bg=\u0026#34;orange\u0026#34; pad=\u0026#34;0 50px\u0026#34;\u0026gt; ###### Lorem Ipsum wasnt simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry\u0026#39;s standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book here there \u0026lt;/grid\u0026gt; \u0026lt;grid drag=\u0026#34;50 50\u0026#34; drop=\u0026#34;bottomright\u0026#34; bg=\u0026#34;orange\u0026#34; pad=\u0026#34;20px\u0026#34;\u0026gt; ![[Image.jpg|800]] \u0026lt;/grid\u0026gt; Padding introduced by this property does not increase the size of the grid itself. Rather it reduces the size of the area available to render children within the grid. Alignment The grid align property is used to define the horizontal alignment of a grid section.\n\u0026lt;grid drag=\u0026quot;width height\u0026quot; drop=\u0026quot;x y\u0026quot; align=\u0026quot;type\u0026quot;\u0026gt; Where the type option of the align property can take one of the following types:\nleft right center (default) justify / block top bottom topleft topright bottomleft bottomright stretch The following sample demonstrates the use of align:\n\u0026lt;grid drag=\u0026#34;35 20\u0026#34; drop=\u0026#34;topleft\u0026#34; align=\u0026#34;left\u0026#34;\u0026gt; This text is aligned to the left side of the box \u0026lt;/grid\u0026gt; \u0026lt;grid drag=\u0026#34;35 20\u0026#34; drop=\u0026#34;topright\u0026#34; align=\u0026#34;right\u0026#34;\u0026gt; This text is aligned to the right side of the box \u0026lt;/grid\u0026gt; \u0026lt;grid drag=\u0026#34;36 20\u0026#34; drop=\u0026#34;center\u0026#34; align=\u0026#34;justify\u0026#34;\u0026gt; Stretches the text so that each line has equal width (like in newspapers and magazines) \u0026lt;/grid\u0026gt; The following sample demonstrates the use of stretch alignment:\n\u0026lt;grid drag=\u0026#34;100 45\u0026#34; drop=\u0026#34;top\u0026#34; flow=\u0026#34;row\u0026#34; align=\u0026#34;stretch\u0026#34;\u0026gt; ![[Title-Wide.png]] ![[Title-Wide.png]] ![[Title-Wide.png]] \u0026lt;/grid\u0026gt; \u0026lt;grid drag=\u0026#34;100 55\u0026#34; drop=\u0026#34;bottom\u0026#34; flow=\u0026#34;col\u0026#34; align=\u0026#34;stretch\u0026#34;\u0026gt; ![[Title-Wide.png]] ![[Title-Wide.png]] \u0026lt;/grid\u0026gt; Justify Content The grid justify-content property is used to define how the grid component distributes space between and around their children.\n\u0026lt;grid drag=\u0026quot;width height\u0026quot; drop=\u0026quot;x y\u0026quot; justify-content=\u0026quot;type\u0026quot;\u0026gt; Where the type option of the justify-content property can take one of the following types:\nstart center space-between space-around space-evenly (default) end The following sample demonstrates the use of align:\n\u0026lt;grid drag=\u0026#34;30 100\u0026#34; drop=\u0026#34;left\u0026#34; justify-content=\u0026#34;center\u0026#34; bg=\u0026#34;red\u0026#34;\u0026gt; Item 1 Item 2 Item 3 Item 4 \u0026lt;/grid\u0026gt; \u0026lt;grid drag=\u0026#34;30 100\u0026#34; drop=\u0026#34;center\u0026#34; justify-content=\u0026#34;space-between\u0026#34; bg=\u0026#34;green\u0026#34;\u0026gt; Item 1 Item 2 Item 3 Item 4 \u0026lt;/grid\u0026gt; \u0026lt;grid drag=\u0026#34;30 100\u0026#34; drop=\u0026#34;right\u0026#34; justify-content=\u0026#34;space-around\u0026#34; bg=\u0026#34;coral\u0026#34;\u0026gt; Item 1 Item 2 Item 3 Item 4 \u0026lt;/grid\u0026gt; Fragments The grid frag property is used to define fragments for grid. Fragments are used to highlight or incrementally reveal individual elements on a slide.\n\u0026lt;grid drag=\u0026quot;width height\u0026quot; drop=\u0026quot;x y\u0026quot; frag=\u0026quot;index\u0026quot;\u0026gt; Where the index option of the frag property is a postive value indicates the order the fragment will be displayed.\nThe following sample demonstrates fragments:\n\u0026lt;grid drag=\u0026#34;60 55\u0026#34; drop=\u0026#34;5 10\u0026#34; bg=\u0026#34;red\u0026#34;\u0026gt; ### Fragments: + Right + Bottom \u0026lt;/grid\u0026gt; \u0026lt;grid drag=\u0026#34;25 55\u0026#34; drop=\u0026#34;-5 10\u0026#34; bg=\u0026#34;green\u0026#34; frag=\u0026#34;1\u0026#34;\u0026gt; Right Grid \u0026lt;/grid\u0026gt; \u0026lt;grid drag=\u0026#34;90 20\u0026#34; drop=\u0026#34;5 -10\u0026#34; bg=\u0026#34;gray\u0026#34; frag=\u0026#34;2\u0026#34;\u0026gt; Bottom Grid \u0026lt;/grid\u0026gt; As you have surely seen in the example, you can combine Fragments and Fragment Lists with each other. By default, Fragment Lists generate indexes that start at 1.\nReference This guide provides a quick reference to the full set of attributes that can be set on grid component:\ndrag=\u0026ldquo;width height\u0026rdquo; drop=\u0026ldquo;x y | topleft | top | topright | left | center | right | bottomleft | bottom | bottomright\u0026rdquo; flow=\u0026ldquo;col | row\u0026rdquo; bg=\u0026ldquo;color name | #425232 | rgb(255, 99, 71) | hsl(0, 100%, 50%)\u0026rdquo; pad=\u0026ldquo;all sides | vertical horizontal | top right bottom left\u0026rdquo; align=\u0026ldquo;left | right | center | justify | block | top | bottom | topleft | topright | bottomleft | bottomright | stretch\u0026rdquo; border=\u0026ldquo;width style color\u0026rdquo; animate=\u0026ldquo;fadeIn | fadeOut | slideRightIn | slideLeftIn | slideUpIn | slideDownIn | slideRightOut | slideLeftOut | slideUpOut | slideDownOut | scaleUp | scaleUpOut | scaleDown | scaleDownOut | slower | faster\u0026rdquo; opacity=\u0026ldquo;0.1\u0026hellip;1\u0026rdquo; rotate=\u0026ldquo;0\u0026hellip;360\u0026rdquo; filter=\u0026ldquo;blur | bright | contrast | grayscale | hue | invert | saturate | sepia\u0026rdquo; frag=\u0026ldquo;1\u0026rdquo; style=\u0026quot;\u0026lt;any\u0026gt;\u0026quot; class=\u0026quot;\u0026lt;any\u0026gt;\u0026quot; "
},
{
	"uri": "https://mszturc.github.io/obsidian-advanced-slides/plugins/overview/",
	"title": "Overview",
	"tags": [],
	"description": "",
	"content": "Press the »ESC« or »O« keys to toggle the overview mode on and off. While you\u0026rsquo;re in this mode, you can still navigate between slides, as if you were at 1,000 feet above your presentation. You could also activate Overview Mode by pressing the Overview Button on the bottom right corner.\nTo enable Overview you have to enable the Plugin in Advanced Slides Settings "
},
{
	"uri": "https://mszturc.github.io/obsidian-advanced-slides/getting-start/settings/",
	"title": "Settings",
	"tags": [],
	"description": "",
	"content": "The settings can be found under Advanced Slides Section inside Plugin Settings. The settings can be found by clicking the gear in the bottom left corner, or by hitting Ctrl/Cmd-,.\nMost of them are fairly self-explanatory, but here are some notes that might be helpful.\nPort Define on which Port Advanced Slides should run. The default Port is 3000. Changing the port can be useful if you operate multiple vaults and both have Advanced Slides plugin installed.\nFirst Steps Follow instructions here\n"
},
{
	"uri": "https://mszturc.github.io/obsidian-advanced-slides/basic-syntax/textstyle/",
	"title": "Text style",
	"tags": [],
	"description": "",
	"content": "*This text will be italic* _This will also be italic_ **This text will be bold** __This will also be bold__ %%This is a Comment(Can\u0026#39;t see it)%% _You **can** combine them_ --- Any word wrapped with two tildes (like ~~this~~) will appear crossed out. Any word wrapped with two equal signs (like ==this==) will appear as highlighted. This text will be italic\nThis will also be italic\nThis text will be bold\nThis will also be bold\nYou can combine them\nAny word wrapped with two tildes (like this) will appear crossed out.\nAny word wrapped with two equal signs (like this) will appear as highlighted.\nSee it fullscreen "
},
{
	"uri": "https://mszturc.github.io/obsidian-advanced-slides/plugins/chalkboard/",
	"title": "Chalkboard",
	"tags": [],
	"description": "",
	"content": "With this plugin you can add a chalkboard to slides. The plugin provides two possibilities to include handwritten notes to your presentation:\nyou can make notes directly on the slides, e.g. to comment on certain aspects, you can open a chalkboard on which you can make notes. The main use case in mind when implementing the plugin is classroom usage in which you may want to explain some course content and quickly need to make some notes.\nTo enable Chalkboard you have to enable the Plugin in Advanced Slides Settings "
},
{
	"uri": "https://mszturc.github.io/obsidian-advanced-slides/extend-syntax/",
	"title": "Extended Syntax",
	"tags": [],
	"description": "",
	"content": "Index\nHorizontal / Vertical Slides Element Annotations Slide Annotations Block Comments Fragments Inline Styling Slide Backgrounds Speaker Notes Fragmented list Excalidraw support Icons Emojis Charts support Slide Animation "
},
{
	"uri": "https://mszturc.github.io/obsidian-advanced-slides/basic-syntax/lists/",
	"title": "Lists",
	"tags": [],
	"description": "",
	"content": "- Item 1 - Item 2 - Item 2a - Item 2b --- 1. Item 1 1. Item 2 1. Item 3 1. Item 3a 1. Item 3b Item 1 Item 2 Item 2a Item 2b Item 1 Item 2 Item 3 Item 3a Item 3b See it fullscreen "
},
{
	"uri": "https://mszturc.github.io/obsidian-advanced-slides/extend-syntax/slideannotations/",
	"title": "Slide Annotations",
	"tags": [],
	"description": "",
	"content": "You can pass style or class properties for the whole slide by annotating it:\n\u0026lt;!-- .slide: style=\u0026#34;background-color: coral;\u0026#34; --\u0026gt; # Header with coral background color Paragraph has coral background color, too! --- \u0026lt;!-- .slide: style=\u0026#34;background-color: green;\u0026#34; --\u0026gt; - All Bullet points - have green - background color Header with coral background color Paragraph has coral background color, too!\nAll Bullet points\nhave green\nbackground color\nSee it fullscreen "
},
{
	"uri": "https://mszturc.github.io/obsidian-advanced-slides/getting-start/firststeps/",
	"title": "Write your first Slide",
	"tags": [],
	"description": "",
	"content": "Step by Step guide to create your first Presentation\nCreate Slides Create a new note and insert the following content into it:\n#### Hello from Cover Page --- Greetings from second Slide Open Live Preview Panel Simply click on the Show Slide Preview button in the main navigation bar:\nPreview #### Hello from Cover Page --- Greetings from second Slide See it fullscreen "
},
{
	"uri": "https://mszturc.github.io/obsidian-advanced-slides/extend-syntax/blockcomment/",
	"title": "Block Comments",
	"tags": [],
	"description": "",
	"content": "You can use block comments to group parts of your slide. By annotating the block all items inside this block gets the properties of the annotation:\n::: block #### Header _and_ Paragraph content *in same block* ::: --- no color ::: block \u0026lt;!-- element style=\u0026#34;background-color: red;\u0026#34; --\u0026gt; everything inside this block has red background color ::: block \u0026lt;!-- element style=\u0026#34;background-color: blue;\u0026#34; --\u0026gt; blue ::: red ::: no color Header and Paragraph content in same block\nno color\neverything inside this block has red background color\nblue\nred\nno color\nSee it fullscreen "
},
{
	"uri": "https://mszturc.github.io/obsidian-advanced-slides/plugins/elapsetimebar/",
	"title": "Elapsed Time Bar",
	"tags": [],
	"description": "",
	"content": "A plugin adding a progress bar based on the elapsed time, that helps you keeping the time in presentations.\nTo set the time for presentation add a timeForPresentation property into your slides frontmatter with the time you want to present in seconds.\nTo enable Elapsed Time Bar you have to enable the Plugin in Advanced Slides Settings "
},
{
	"uri": "https://mszturc.github.io/obsidian-advanced-slides/features/",
	"title": "Features",
	"tags": [],
	"description": "",
	"content": "Index\nAuto Completion Embed Slides "
},
{
	"uri": "https://mszturc.github.io/obsidian-advanced-slides/basic-syntax/images/",
	"title": "Images",
	"tags": [],
	"description": "",
	"content": " Insert image with standard markdown syntax ![Image](https://picsum.photos/id/1006/500/300) --- Insert image that lies outside of your vault ![Image](file:///Users/testUser/Desktop/howToUse.png) --- Insert image with obsidian markdown syntax ![[Image.jpg]] --- Scale image to a width of 100 px ![[Image.jpg|100]] ![Image|100](https://picsum.photos/id/1006/500/300) --- Scale image to a width of 300x100 px ![[Image.jpg|300x100]] \u0026lt;!-- element style=\u0026#34;object-fit: cover\u0026#34; --\u0026gt; Include image with standard markdown syntax ![Image](https://picsum.photos/id/1006/500/300) --- Insert image that lies outside of your vault ![Image](https://picsum.photos/id/1006/500/300) --- Insert image with obsidian markdown syntax ![Image](https://picsum.photos/id/1006/500/300) --- Scale image to a width of 100 px ![Image](https://picsum.photos/id/1006/100/60) --- Scale image to a width of 300x100 px ![Image](https://picsum.photos/id/1006/300/100) See it fullscreen "
},
{
	"uri": "https://mszturc.github.io/obsidian-advanced-slides/getting-start/learnmore/",
	"title": "Learn more",
	"tags": [],
	"description": "",
	"content": "Learn more about the Advanced Slides from the following pages:\nAdvanced Slides Basics How to use Advanced Slides plugin 用Obsidian做PPT，我是认真的 Advanced Slides 专业PPT制作课程来了 Building layouts Advanced Slides Advanced Using Templates in Advanced Slides Advanced Slides in Action Rust Talks by No Boilerplate Videos Source Talk: Use It or Lose It by Nicole van der Hoeven Video Slides CSS Course by RemyDekor Slides Deck: Estimating The Hemodynamic Response Function by Lynne J Williams Slides Source Deck: Basisprozesse beim Beraten und Entscheiden in Teams by Matthäus Szturc Slides Source Deck: Digital Culture Analyse 21 Slides Template Deck: The four Daggers Slides Deckset about Juggling by Marc Bielert Slides Deck: Hydrothermal Venture Slides Deck: ML Ops Examples by Sam Foreman Slides Source Deck: Scientific Data Science by Sam Foreman Slides Source "
},
{
	"uri": "https://mszturc.github.io/obsidian-advanced-slides/basic-syntax/video/",
	"title": "Video",
	"tags": [],
	"description": "",
	"content": " Insert video as an HTML video tag \u0026lt;video data-autoplay controls\u0026gt;\u0026lt;source src=\u0026#34;Attachments/my_video_file.mp4\u0026#34; type=\u0026#34;video/mp4\u0026#34;\u0026gt;\u0026lt;/video\u0026gt; --- Set the size of the video \u0026lt;video data-autoplay controls width=\u0026#34;800\u0026#34; height=\u0026#34;600\u0026#34;\u0026gt;\u0026lt;source src=\u0026#34;Attachments/my_video_file.mp4\u0026#34; type=\u0026#34;video/mp4\u0026#34;\u0026gt;\u0026lt;/video\u0026gt; References:\nhttps://forum.obsidian.md/t/advanced-slides-create-markdown-based-reveal-js-presentations-in-obsidian/28243/42 https://www.w3schools.com/tags/tag_video.asp Insert video as an HTML video tag\nSet the size of the video\nSee it fullscreen "
},
{
	"uri": "https://mszturc.github.io/obsidian-advanced-slides/extend-syntax/fragments/",
	"title": "Fragments",
	"tags": [],
	"description": "",
	"content": "Fragments are used to highlight or incrementally reveal individual elements on a slide. Every element with the class fragment will be stepped through before moving on to the next slide. The default fragment style is to start out invisible and fade in. This style can be changed by appending a different class to the fragment. A list of all possible fragment types could be found here Fade in \u0026lt;!-- element class=\u0026#34;fragment\u0026#34; --\u0026gt; Fade out \u0026lt;!-- element class=\u0026#34;fragment fade-out\u0026#34; --\u0026gt; Highlight red \u0026lt;!-- element class=\u0026#34;fragment highlight-red\u0026#34; --\u0026gt; Fade in, then out \u0026lt;!-- element class=\u0026#34;fragment fade-in-then-out\u0026#34; --\u0026gt; Slide up while fading in \u0026lt;!-- element class=\u0026#34;fragment fade-up\u0026#34; --\u0026gt; --- - Permanent item - Appear Fourth \u0026lt;!-- element class=\u0026#34;fragment\u0026#34; data-fragment-index=\u0026#34;4\u0026#34; --\u0026gt; - Appear Third \u0026lt;!-- element class=\u0026#34;fragment\u0026#34; data-fragment-index=\u0026#34;3\u0026#34; --\u0026gt; - Appear Second \u0026lt;!-- element class=\u0026#34;fragment\u0026#34; data-fragment-index=\u0026#34;2\u0026#34; --\u0026gt; - Appear First \u0026lt;!-- element class=\u0026#34;fragment\u0026#34; data-fragment-index=\u0026#34;1\u0026#34; --\u0026gt; Fade in Fade out Highlight red Fade in, then out Slide up while fading in Permanent item Appear Fourth Appear Third Appear Second Appear First See it fullscreen "
},
{
	"uri": "https://mszturc.github.io/obsidian-advanced-slides/layout/",
	"title": "Layouts",
	"tags": [],
	"description": "",
	"content": "Advanced Slides provides a variety of components that simplify layouting of you slides:\nSplit Component\nBy using the \u0026lt;split\u0026gt; tag you are able to split the content of your slide in rows and columns Attributes even By setting the even attribute the Content of the split element gets divided evenly: \u0026lt;split even\u0026gt; ![](https://picsum.photos/id/1005/250/250) ![](https://picsum.photos/id/1010/250/250) ![](https://picsum.photos/id/1025/250/250) \u0026lt;/split\u0026gt; Example: In a split with 3 children every child takes 1/3 of the availible width of the slide gap By adding the gap attribute there will be a gap between each element:\nGrid Component\nBy using the \u0026lt;grid\u0026gt; tag you are able to layout the content of your slide in parts. Concept Grid layouts drag-and-drop is used to size and position content of your slides. Drag to size a block of content on your slide, then Drop to position that block anywhere on the slide. Basic Syntax The following syntax is used to drag-and-drop a grid in Advanced Slides: \u0026lt;grid drag=\u0026quot;width height\u0026quot; drop=\u0026quot;x y\u0026quot;\u0026gt; The width and height values of the drag property define the size of the area in which the content will be displayed.\n"
},
{
	"uri": "https://mszturc.github.io/obsidian-advanced-slides/basic-syntax/links/",
	"title": "Links",
	"tags": [],
	"description": "",
	"content": "External Links http://obsidian.md - automatic! [Obsidian](http://obsidian.md) --- Obsidian URI links [Link to note](obsidian://open?path=D:%2Fpath%2Fto%2Ffile.md) [Link to note](obsidian://open?vault=MainVault\u0026amp;file=MyNote.md) --- \u0026lt;!-- .slide: id=\u0026#34;InternalLinks\u0026#34; --\u0026gt; Internal Links This [[Internal link]] will be displayed as normal text This [[Internal link|Link]] will use its alias for displaying --- Slide Links You can link between slides, [like this](#/1/0). Or by slide id, [like this](#InternalLinks). External Links http://obsidian.md - automatic! [Obsidian](http://obsidian.md) --- Obsidian URI links [Link to note](obsidian://open?path=D:%2Fpath%2Fto%2Ffile.md) [Link to note](obsidian://open?vault=MainVault\u0026file=MyNote.md) --- Internal Links This Internal link will be displayed as normal text This Link will use its alias for displaying --- Slide Links You can link between slides, [like this](#/1/0). Or by slide id, [like this](#/2/0). ___ \u003e If you'd like backlinks to be displayed in the slides, check out the frontmatter property **enableLinks** See it fullscreen If you\u0026rsquo;d like backlinks to be displayed in the slides, check out the frontmatter property enableLinks. see yaml docs "
},
{
	"uri": "https://mszturc.github.io/obsidian-advanced-slides/templates/",
	"title": "Templates",
	"tags": [],
	"description": "",
	"content": "Advanced Slides allows you to design individual slides based on slide templates. Each slide template can have a unique layout and structure that you can draw upon repeatedly over the presentation. Using slide templates makes creating presentations that use different layout formats across different slides easy and fast. Also, slide templates reduce redundant code (aka boilerplate code) in your md presentation document.\nExample: Using a simple slide template The following slide template defines a slide structure that has a main content area as well as a footer. It shall be named tpl-footer and can be stored as a regular md note anywhere within the Obsidian vault you are using to make the presentation.\n\u0026lt;% content %\u0026gt; \u0026lt;grid drag=\u0026#34;100 6\u0026#34; drop=\u0026#34;bottom\u0026#34;\u0026gt; \u0026lt;% footer %\u0026gt; \u0026lt;/grid\u0026gt; Once we have created this slide template we can reference it in our presentation by making a slide annotation in the following manner:\nHow to use templates \u0026lt;!-- slide template=\u0026#34;[[tpl-footer]]\u0026#34; --\u0026gt; # This header will be part of the content section defined in the template Everything define outside a block will be placed in the content section. Therefore every template has to contain at least a content variable. To place a text into the footer section you have to create a block comment with the name of the variable you defined in the template. ::: footer #### This header will be placed in the footer section of the template ::: Note that every template must contain a \u0026lt;% content %\u0026gt; variable even if it is not used in the slide content.\nOptional Variables By default, every variable in a slide template has to be set by a block comment in the slide. Otherwise, a dummy text will be placed into the variable that reminds you to create a block comment for this variable. But there are scenarios where you don\u0026rsquo;t want this behaviour, such as when you have a citation line in the footer of your template, but you don\u0026rsquo;t need to reference any citations. Therefore you can create a section in the template and add a ? in its definition:\n\u0026lt;% content %\u0026gt; \u0026lt;grid drag=\u0026#34;100 6\u0026#34; drop=\u0026#34;bottom\u0026#34;\u0026gt; \u0026lt;%? footer %\u0026gt; \u0026lt;/grid\u0026gt; The footer markup won\u0026rsquo;t be visible until you create a footer block comment inside of your slide.\nAdvanced example The following slide template is called tpl-con-2-1-box. It creates a slide structure with a narrow header bar at the top end of the slide, 2 broad columns at the center of the slide as well as a footer bar with a citation line in the bottom of the slide.\n\u0026lt;grid drag=\u0026#34;100 10\u0026#34; drop=\u0026#34;top\u0026#34; bg=\u0026#34;white\u0026#34; align=\u0026#34;left\u0026#34; pad=\u0026#34;0 20px\u0026#34;\u0026gt; \u0026lt;% title %\u0026gt; \u0026lt;/grid\u0026gt; \u0026lt;grid drag=\u0026#34;28 75\u0026#34; drop=\u0026#34;69 15\u0026#34; bg=\u0026#34;white\u0026#34; style=\u0026#34;border-radius:15px\u0026#34;/\u0026gt; \u0026lt;grid drag=\u0026#34;64 70\u0026#34; drop=\u0026#34;3 15\u0026#34; align=\u0026#34;topleft\u0026#34;\u0026gt; \u0026lt;% left %\u0026gt; \u0026lt;/grid\u0026gt; \u0026lt;grid drag=\u0026#34;26 71\u0026#34; drop=\u0026#34;70 17\u0026#34; align=\u0026#34;topleft\u0026#34;\u0026gt; \u0026lt;% right %\u0026gt; \u0026lt;/grid\u0026gt; \u0026lt;% content %\u0026gt; \u0026lt;style\u0026gt; .horizontal_dotted_line{ border-bottom: 2px dotted gray; } } \u0026lt;/style\u0026gt; \u0026lt;grid drag=\u0026#34;94 0\u0026#34; drop=\u0026#34;3 -6\u0026#34; class=\u0026#34;horizontal_dotted_line\u0026#34;\u0026gt; \u0026lt;/grid\u0026gt; \u0026lt;grid drag=\u0026#34;100 30\u0026#34; drop=\u0026#34;0 64\u0026#34; align=\u0026#34;bottomleft\u0026#34; pad=\u0026#34;0 30px\u0026#34; \u0026gt; \u0026lt;%? source %\u0026gt; \u0026lt;/grid\u0026gt; \u0026lt;grid drag=\u0026#34;100 6\u0026#34; drop=\u0026#34;bottom\u0026#34;\u0026gt; ###### © 2022 Advanced Slides\u0026lt;!-- element style=\u0026#34;font-weight:300\u0026#34; --\u0026gt; \u0026lt;/grid\u0026gt; Using templates in a presentation --- theme: consult height: 540 margin: 0 maxScale: 4 --- \u0026lt;!-- slide template=\u0026#34;[[tpl-con-2-1-box]]\u0026#34; --\u0026gt; ::: title ### _**This is the Title of this Slide**_ ::: ::: left ![[Image.jpg|1500]] ::: \u0026lt;style\u0026gt; .small-indent \u0026gt; ul { padding-left: 1em; } \u0026lt;/style\u0026gt; ::: right **Header #1** - Lorem ipsum dolor sit amet, consectetuer adipiscing elit. - tium. Integer tincidunt. Cras dapibus. Vivamus elementum semper nisi. Aenean vulputate eleifend tellus. Aenean leo ligula, porttitor eu, consequa - augue. Curabitur ullamcorper ultricies nisi. Nam eget dui. Etiam rhoncus. Maecenas tempus, tellus eget condimentum rhoncus, sem quam semper libero, sit a - Nam quam nunc Umsetzungsschritte **Header #2** - Curabitur - condimentum - Maecenas **Header #3** - justo - rhoncus - semper :::\u0026lt;!-- element align=\u0026#34;left\u0026#34; style=\u0026#34;font-size: 13px;\u0026#34; class=\u0026#34;small-indent\u0026#34; --\u0026gt; ::: source ###### Source: Copied from Lorem ipsum dolor Generator ::: The rendered Slide "
},
{
	"uri": "https://mszturc.github.io/obsidian-advanced-slides/basic-syntax/embeds/",
	"title": "Embeds",
	"tags": [],
	"description": "",
	"content": "Given the following Obsidian.md Note file:\n# Notes about Obsidian A knowledge base that works on local Markdown files # Link Link to Obsidian Homepage: http://obsidian.md And the following Slide.md:\n![[Obsidian]] --- ![[Obsidian#Link]] # Notes about Obsidian A knowledge base that works on local Markdown files # Link Link to Obsidian Homepage: http://obsidian.md --- # Link Link to Obsidian Homepage: http://obsidian.md See it fullscreen "
},
{
	"uri": "https://mszturc.github.io/obsidian-advanced-slides/examples/",
	"title": "Examples",
	"tags": [],
	"description": "",
	"content": " Minml Consult Workout Plan - Leg Day "
},
{
	"uri": "https://mszturc.github.io/obsidian-advanced-slides/extend-syntax/inlinestyling/",
	"title": "Inline Styling",
	"tags": [],
	"description": "",
	"content": "you may define css styles inside your markdown:\nby using the \u0026lt;style\u0026gt; compoment \u0026lt;style\u0026gt; .with-border{ border: 1px solid red; } \u0026lt;/style\u0026gt; styled text \u0026lt;!-- element class=\u0026#34;with-border\u0026#34; --\u0026gt; styled text See it fullscreen by including them through css file it is possible to add further css files beside theme and highlight theme to slide deck:\n--- css: [css/layout.css,css/customFonts.css] --- "
},
{
	"uri": "https://mszturc.github.io/obsidian-advanced-slides/themes/",
	"title": "Themes",
	"tags": [],
	"description": "",
	"content": "Advanced Slides comes with a varity of diffrent themes built in:\nblack (default) white league beige sky night serif simple solarized blood moon consult css/mattropolis.css To activate a theme simply add a theme property in the frontmatter section of your slides:\n--- theme: night --- if you want to use a custum theme you can do it! Just place the theme in the plugins directory and load them from there.\nExample:\nIf your theme file name is my-theme.css place it inside your Vaults directory in .obsidian/plugins/obsidian-advanced-slides/css/ subfolder and load it by adding the following line on top of your slides markdown file:\n--- theme: css/my-theme.css --- You can also load a custom theme directly from the Internet:\n--- theme: https://revealjs-themes.dzello.com/css/theme/robot-lung.css --- Highlight Themes All you have learned so far about custom themes could be applied to highlight themes as well. Highlight Themes define how codeblock elements should look. To activate a highlight theme simply add a highlightTheme property in the frontmatter section of your slides:\n--- highlightTheme: monokai --- By default advanced slides comes with a varity of diffrent highlight themes:\nzenburn (default) monokai css/vs2015.css "
},
{
	"uri": "https://mszturc.github.io/obsidian-advanced-slides/basic-syntax/blockquotes/",
	"title": "Blockquotes",
	"tags": [],
	"description": "",
	"content": "\u0026gt; Human beings face ever more complex and urgent problems, and their effectiveness in dealing with these problems is a matter that is critical to the stability and continued progress of society. \\- Doug Engelbart, 1961 \u003e Human beings face ever more complex and urgent problems, and their effectiveness in dealing with these problems is a matter that is critical to the stability and continued progress of society. \\- Doug Engelbart, 1961 See it fullscreen "
},
{
	"uri": "https://mszturc.github.io/obsidian-advanced-slides/yaml/",
	"title": "Frontmatter Options",
	"tags": [],
	"description": "",
	"content": "You can customize many setting for your current slide deck by adding one or more of the following properties into the frontmatter section of your slide:\nName Description Possible Values Default Value width Sets the width of the presentation number 960 height Sets the width of the presentation number 700: margin Empty space around the content number 0.04: minScale Bounds for smallest possible scale to apply to content number 0.2 maxScale Bounds for largest possible scale to apply to content number 2.0 notesSeparator Sets the note delimiter string note: separator Sets the slide separator string ^( ?| )\u0026mdash;( ?| )$ verticalSeparator Sets the vertical slide separator string ^( ?| )\u0026ndash;( ?| )$ enableLinks Enable backlinks in slides true / false false theme Sets the theme see theme docs black highlightTheme Sets the highlight theme see theme docs zenburn css Adds further css files [] enableOverview Shows the Overview Button on the bottom right corner of the slide true / false false enableChalkboard Activates the chalkboard for slides true / false false controls Display presentation control arrows true / false true controlsLayout Determines where controls appear edges / bottom-right bottom-right progress Display a presentation progress bar true / false true slideNumber Display the page number of the current slide see reveal.js docs false overview Enable the slide overview mode true / false true center Vertical centering of slides true / false true loop Loop the presentation true / false false rtl Change the presentation direction to be RTL true / false false shuffle Randomizes the order of slides each time the presentation loads true / false false fragments Turns fragments on and off globally true / false true showNotes Flags if speaker notes should be visible to all viewers true / false false autoSlide Controls automatic progression to the next slide number (in milliseconds) 0 transition Transition style none / fade / slide / convex / concave / zoom true transitionSpeed Transition speed default / fast / slow default bg Sets a default background for all slides see slide background docs \u0026lsquo;#ffffff\u0026rsquo; markdown Sets options for marked (see note below) (see note below) enableTimeBar Activates elapsing timer bar for slides true / false false timeForPresentation Sets the time for elapsing timer in seconds number 120 You can find more possible parameters here marked is the Markdown parser used by reveal.js. The complete set of marked options is here.\nThe default value of markdown:\nmarkdown: gfm: true mangle: true pedantic: false smartLists: false smartypants: false Other marked options exist, but should not be used with the Advanced Slides plugin.\n"
},
{
	"uri": "https://mszturc.github.io/obsidian-advanced-slides/extend-syntax/slidebackground/",
	"title": "Slide Backgrounds",
	"tags": [],
	"description": "",
	"content": "you can change the background by annotating the slide:\n\u0026lt;!-- slide bg=\u0026#34;aquamarine\u0026#34; --\u0026gt; ## Slide with text based background --- \u0026lt;!-- slide bg=\u0026#34;#ff0000\u0026#34; --\u0026gt; ## Slide with hex based background --- \u0026lt;!-- slide bg=\u0026#34;rgb(70, 70, 255)\u0026#34; --\u0026gt; ## Slide with rgb based background --- \u0026lt;!-- slide bg=\u0026#34;hsla(315, 100%, 50%, 1)\u0026#34; --\u0026gt; ## Slide with hsl based background --- # Slide without background --- \u0026lt;!-- slide bg=\u0026#34;https://picsum.photos/seed/picsum/800/600\u0026#34; --\u0026gt; ## Slide with image background --- \u0026lt;!-- slide bg=\u0026#34;[[image.jpg]]\u0026#34; --\u0026gt; ## Slide with image background #2 --- \u0026lt;!-- slide bg=\u0026#34;https://picsum.photos/seed/picsum/800/600\u0026#34; data-background-opacity=\u0026#34;0.5\u0026#34; --\u0026gt; ## with opacity 0.5 ≙ 50% opacity --- ## More options: See [reveal backgrounds](https://revealjs.com/backgrounds/) Slide with text based background Slide with hex based background Slide with rgb based background Slide with hsl based background Slide without background Slide with image background Slide with image background #2 More options: See reveal backgrounds\nSee it fullscreen "
},
{
	"uri": "https://mszturc.github.io/obsidian-advanced-slides/basic-syntax/inlinecode/",
	"title": "Inline Code",
	"tags": [],
	"description": "",
	"content": "### Text inside `backticks` on a line will be formatted like code. ### Text inside `backticks` on a line will be formatted like code. See it fullscreen "
},
{
	"uri": "https://mszturc.github.io/obsidian-advanced-slides/plugins/",
	"title": "Plugins",
	"tags": [],
	"description": "",
	"content": "Advanced Slides comes with a varity of diffrent plugins built in:\nMenu Overview Chalkboard Elapsed Time Bar "
},
{
	"uri": "https://mszturc.github.io/obsidian-advanced-slides/extend-syntax/speakernotes/",
	"title": "Speaker Notes",
	"tags": [],
	"description": "",
	"content": "Advanced Slides comes with a speaker notes function which can be used to present per-slide notes in a speaker view.\nTo access the speaker view you have to open Slide Preview and click on the Open in Browser Button in the top right corner. Your Slide will open in your default web browser. Press the »S« key on your keyboard to open the notes window.\nThe notes window also gives you a preview of the next upcoming slide so it may be helpful even if you haven\u0026rsquo;t written any notes.\n## My Slide This is part of my Presentation note: this is not! Only the speaker might see this text. - and this bulletpoint - or this picture ![](https://picsum.photos/id/1005/250/250) It is possible to change the notes indicator by changing the notesSeparator property in frontmatter see yaml docs "
},
{
	"uri": "https://mszturc.github.io/obsidian-advanced-slides/extend-syntax/fragmentedlists/",
	"title": "Fragmented list",
	"tags": [],
	"description": "",
	"content": "Based on the Fragments concept Advanced Slides introduced a convention to automatically add fragment annotation to bullet points of ordered and unordered lists. By using + or ) as indicator for a list, the list will be automatically displayed as a fragmented list.\n# Unordered list - First - Second - Third --- # Fragmented unordered list - Permanent + First + Second + Third --- # Ordered list 1. First 2. Second 3. Third --- # Fragmented ordered list 1. Permanent 2) Second 3) Third 4) Fourth Unordered list First Second Third Fragmented unordered list Permanent First Second Third Ordered list First Second Third Fragmented ordered list Permanent Second Third Fourth See it fullscreen "
},
{
	"uri": "https://mszturc.github.io/obsidian-advanced-slides/basic-syntax/tables/",
	"title": "Tables",
	"tags": [],
	"description": "",
	"content": "First Header | Second Header ------------ | ------------ Content from cell 1 | Content from cell 2 Content in the first column | Content in the second column "
},
{
	"uri": "https://mszturc.github.io/obsidian-advanced-slides/basic-syntax/codeblocks/",
	"title": "CodeBlocks",
	"tags": [],
	"description": "",
	"content": " ```js [1-2|3|4] let a = 1; let b = 2; let c = x =\u0026gt; 1 + 2 + x; c(3); ``` "
},
{
	"uri": "https://mszturc.github.io/obsidian-advanced-slides/extend-syntax/excalidraw/",
	"title": "Excalidraw support",
	"tags": [],
	"description": "",
	"content": " It’s required to activate Auto-Export SVG / PNG in Excalidraw Settings. #### Excalidraw support ![[Sample.excalidraw|100]] ![[Sample.excalidraw]] \u0026lt;!-- element style=\u0026#34;width:300px; height:400px\u0026#34; --\u0026gt; "
},
{
	"uri": "https://mszturc.github.io/obsidian-advanced-slides/basic-syntax/footnotes/",
	"title": "Footnotes",
	"tags": [],
	"description": "",
	"content": "Here\u0026#39;s a simple footnote[^1] [^1]: meaningful! To define the location where footnotes should be displayed on slide simply define a \u0026lt;%? footnotes %\u0026gt; placeholder on the slide at the location where the footnotes should be rendered. To style the Footnotes itself define styles for footnotes class and it\u0026rsquo;s childeren ol and ol-\u0026gt;li. \u0026lt;%? footnotes %\u0026gt;\n"
},
{
	"uri": "https://mszturc.github.io/obsidian-advanced-slides/extend-syntax/fontawesome/",
	"title": "Icons",
	"tags": [],
	"description": "",
	"content": "You can add Icons to your slide with the following markdown:\n\u0026lt;!-- .slide: bg=\u0026#34;white\u0026#34;--\u0026gt; ![](fab fa-font-awesome fa-4x) ## Icons --- \u0026lt;!-- .slide: bg=\u0026#34;white\u0026#34;--\u0026gt; ### Basic Syntax ![](fas fa-envelope fa-4x)\u0026lt;!-- .element: color=\u0026#34;coral\u0026#34;--\u0026gt; Short Syntax ![](fas fa-envelope fa-4x)\u0026lt;!-- .element: color=\u0026#34;coral\u0026#34;--\u0026gt; HTML Synthax \u0026lt;i color=\u0026#34;coral\u0026#34; class=\u0026#34;fas fa-envelope fa-4x\u0026#34;/\u0026gt; ShortCode Synthax :fas_envelope: --- # Sizing \u0026lt;i class=\u0026#34;fas fa-camera fa-xs\u0026#34;\u0026gt;\u0026lt;/i\u0026gt; \u0026lt;i class=\u0026#34;fas fa-camera fa-sm\u0026#34;\u0026gt;\u0026lt;/i\u0026gt; \u0026lt;i class=\u0026#34;fas fa-camera fa-lg\u0026#34;\u0026gt;\u0026lt;/i\u0026gt; \u0026lt;i class=\u0026#34;fas fa-camera fa-2x\u0026#34;\u0026gt;\u0026lt;/i\u0026gt; \u0026lt;i class=\u0026#34;fas fa-camera fa-3x\u0026#34;\u0026gt;\u0026lt;/i\u0026gt; \u0026lt;i class=\u0026#34;fas fa-camera fa-5x\u0026#34;\u0026gt;\u0026lt;/i\u0026gt; \u0026lt;i class=\u0026#34;fas fa-camera fa-7x\u0026#34;\u0026gt;\u0026lt;/i\u0026gt; --- # Rotating Icons \u0026lt;i class=\u0026#34;fas fa-snowboarding\u0026#34;\u0026gt;\u0026lt;/i\u0026gt; \u0026lt;i class=\u0026#34;fas fa-snowboarding fa-rotate-90\u0026#34;\u0026gt;\u0026lt;/i\u0026gt; \u0026lt;i class=\u0026#34;fas fa-snowboarding fa-rotate-180\u0026#34;\u0026gt;\u0026lt;/i\u0026gt; \u0026lt;i class=\u0026#34;fas fa-snowboarding fa-rotate-270\u0026#34;\u0026gt;\u0026lt;/i\u0026gt; \u0026lt;i class=\u0026#34;fas fa-snowboarding fa-flip-horizontal\u0026#34;\u0026gt;\u0026lt;/i\u0026gt; \u0026lt;i class=\u0026#34;fas fa-snowboarding fa-flip-vertical\u0026#34;\u0026gt;\u0026lt;/i\u0026gt; \u0026lt;i class=\u0026#34;fas fa-snowboarding fa-flip-both\u0026#34;\u0026gt;\u0026lt;/i\u0026gt; --- # Animating Icons \u0026lt;i class=\u0026#34;fas fa-spinner fa-spin fa-3x\u0026#34;\u0026gt;\u0026lt;/i\u0026gt; \u0026lt;i class=\u0026#34;fas fa-circle-notch fa-spin fa-3x\u0026#34;\u0026gt;\u0026lt;/i\u0026gt; \u0026lt;i class=\u0026#34;fas fa-sync fa-spin fa-3x\u0026#34;\u0026gt;\u0026lt;/i\u0026gt; \u0026lt;i class=\u0026#34;fas fa-cog fa-spin fa-3x\u0026#34;\u0026gt;\u0026lt;/i\u0026gt; \u0026lt;i class=\u0026#34;fas fa-spinner fa-pulse fa-3x\u0026#34;\u0026gt;\u0026lt;/i\u0026gt; \u0026lt;i class=\u0026#34;fas fa-stroopwafel fa-spin fa-3x\u0026#34;\u0026gt;\u0026lt;/i\u0026gt; --- #### Bordered + Pulled Icons \u0026lt;i class=\u0026#34;fas fa-quote-left fa-2x fa-pull-left\u0026#34;\u0026gt;\u0026lt;/i\u0026gt; Gatsby believed in the green light, the orgastic future that year by year recedes before us. It eluded us then, but that’s no matter — tomorrow we will run faster, stretch our arms further... And one fine morning — So we beat on, boats against the current, borne back ceaselessly into the past.\u0026lt;!-- .element: style=\u0026#34;font-size: 24px\u0026#34; align=\u0026#34;justify\u0026#34; --\u0026gt; \u0026lt;br\u0026gt; \u0026lt;i class=\u0026#34;fas fa-arrow-right fa-2x fa-pull-right fa-border\u0026#34;\u0026gt;\u0026lt;/i\u0026gt; Gatsby believed in the green light, the orgastic future that year by year recedes before us. It eluded us then, but that’s no matter — tomorrow we will run faster, stretch our arms further... And one fine morning — So we beat on.\u0026lt;!-- .element: style=\u0026#34;font-size: 46px\u0026#34; align=\u0026#34;justify\u0026#34; --\u0026gt; See it fullscreen More documentation for Font Awesome here Overview of all icons here "
},
{
	"uri": "https://mszturc.github.io/obsidian-advanced-slides/extend-syntax/emojis/",
	"title": "Emojis",
	"tags": [],
	"description": "",
	"content": "You can insert Emoji shortcodes in your slide.\n:smile: =\u0026gt; 😄 Any shortcode you write in your markdown notes will be automatically shown as an emoji in the slide preview.\nIf you want to have full support for shortcode\u0026rsquo;s autocompletion or viewing them in reading mode, this plugin is the perfect companion: Obsidian Emoji Shortcodes\nAn extensive cheat sheet for every shortcode here "
},
{
	"uri": "https://mszturc.github.io/obsidian-advanced-slides/basic-syntax/math/",
	"title": "Math",
	"tags": [],
	"description": "",
	"content": "$$\\begin{vmatrix}a \u0026amp; b\\\\ c \u0026amp; d \\end{vmatrix}=ad-bc$$ You can also do inline math like $s^{-2}_{n}\\sum_{i=1}^{n}$ "
},
{
	"uri": "https://mszturc.github.io/obsidian-advanced-slides/basic-syntax/mermaid/",
	"title": "Mermaid",
	"tags": [],
	"description": "",
	"content": "--- theme: beige highlightTheme: css/vs2015.css --- ```mermaid sequenceDiagram Alice-\u0026gt;\u0026gt;+John: Hello John, how are you? Alice-\u0026gt;\u0026gt;+John: John, can you hear me? John--\u0026gt;\u0026gt;-Alice: Hi Alice, I can hear you! John--\u0026gt;\u0026gt;-Alice: I feel great! ``` "
},
{
	"uri": "https://mszturc.github.io/obsidian-advanced-slides/basic-syntax/callouts/",
	"title": "Callouts",
	"tags": [],
	"description": "",
	"content": "\u0026gt; [!tip] This tip has a custom Header \u0026gt; This is an Tip with a custom Title \u0026lt;!-- element style=\u0026#34;width:40%\u0026#34;--\u0026gt; \u0026gt; [!warning] \u0026gt; This warning is aligned left \u0026lt;!-- element style=\u0026#34;width:20%;font-size:24px\u0026#34; align=\u0026#34;left\u0026#34;--\u0026gt; \u0026lt;br\u0026gt; \u0026gt; [!error] \u0026gt; Callouts support manipulation through annotations \u0026lt;!-- element style=\u0026#34;width:20%;font-size:24px\u0026#34; rotate=\u0026#34;15\u0026#34;--\u0026gt; \u0026lt;grid drag=\u0026#34;30 30\u0026#34; drop=\u0026#34;11 68\u0026#34; style=\u0026#34;font-size:36px\u0026#34;\u0026gt; \u0026gt; [!example] \u0026gt; Here is an Example for an Callout in a Slide. Callouts support dark and white backgrounds and could be sized by annotations \u0026lt;/grid\u0026gt; \u0026lt;grid drag=\u0026#34;50 100\u0026#34; drop=\u0026#34;50 0\u0026#34; bg=\u0026#34;white\u0026#34; pad=\u0026#34;50px\u0026#34; style=\u0026#34;font-size:36px\u0026#34;\u0026gt; \u0026gt; [!example] \u0026gt; Here is an Example for an Callout in a Slide. Callouts support dark and white backgrounds and could be sized by annotations \u0026lt;/grid\u0026gt; "
},
{
	"uri": "https://mszturc.github.io/obsidian-advanced-slides/extend-syntax/charts/",
	"title": "Charts support",
	"tags": [],
	"description": "",
	"content": "Advanced Slides allows to add charts using Obsidian Charts plugin syntax or Reveal.js Charts syntax.\nObsidian Charts Example: Currently the following features are not supported:\nDataview Integration Chart from Table ```chart type: bar labels: [Monday,Tuesday,Wednesday,Thursday,Friday, Saturday, Sunday, \u0026#34;next Week\u0026#34;, \u0026#34;next Month\u0026#34;] series: - title: Title 1 data: [1,2,3,4,5,6,7,8,9] - title: Title 2 data: [5,4,3,2,1,0,-1,-2,-3] ``` You can find more examples in the Obsidian Charts Dokumentation\nReveal.js Charts Example \u0026lt;canvas data-chart=\u0026#34;line\u0026#34; \u0026gt; \u0026lt;!-- { \u0026#34;data\u0026#34;: { \u0026#34;labels\u0026#34;: [\u0026#34;January\u0026#34;,\u0026#34; February\u0026#34;,\u0026#34; March\u0026#34;,\u0026#34; April\u0026#34;,\u0026#34; May\u0026#34;,\u0026#34; June\u0026#34;,\u0026#34; July\u0026#34;], \u0026#34;datasets\u0026#34;:[ { \u0026#34;data\u0026#34;:[65,59,80,81,56,55,40], \u0026#34;label\u0026#34;:\u0026#34;My first dataset\u0026#34;,\u0026#34;backgroundColor\u0026#34;:\u0026#34;rgba(20,220,220,.8)\u0026#34; }, { \u0026#34;data\u0026#34;:[28,48,40,19,86,27,90], \u0026#34;label\u0026#34;:\u0026#34;My second dataset\u0026#34;,\u0026#34;backgroundColor\u0026#34;:\u0026#34;rgba(220,120,120,.8)\u0026#34; } ] } } --\u0026gt; \u0026lt;/canvas\u0026gt; You can find more examples in the Reveal.js Charts Dokumentation\n"
},
{
	"uri": "https://mszturc.github.io/obsidian-advanced-slides/extend-syntax/slideanimation/",
	"title": "Slide Animation",
	"tags": [],
	"description": "",
	"content": "Advanced Slides can automatically animate elements across slides. All you need to do is add data-auto-animate to two adjacent slide annotationsand Auto-Animate will animate all matching elements between the two.\nHere\u0026rsquo;s a simple example to give you a better idea of how it can be used:\n\u0026lt;!-- .slide: data-auto-animate --\u0026gt; # Title --- \u0026lt;!-- .slide: data-auto-animate --\u0026gt; # Title ##### **Subtitle** ###### *Author - 2022* To learn more about Auto-Animation visit reveal.js Documentation "
},
{
	"uri": "https://mszturc.github.io/obsidian-advanced-slides/examples/consult/plugin/chalkboard/readme/",
	"title": "",
	"tags": [],
	"description": "",
	"content": "Chalkboard With this plugin you can add a chalkboard to reveal.js. The plugin provides two possibilities to include handwritten notes to your presentation:\nyou can make notes directly on the slides, e.g. to comment on certain aspects, you can open a chalkboard or whiteboard on which you can make notes. The main use case in mind when implementing the plugin is classroom usage in which you may want to explain some course content and quickly need to make some notes.\nThe plugin records all drawings made so that they can be play backed using the autoSlide feature or the audio-slideshow plugin.\nCheck out the live demo\nThe chalkboard effect is based on Chalkboard by Mohamed Moustafa.\nInstallation Copy the file plugin.js and the img directory into the plugin folder of your reveal.js presentation, i.e. plugin/chalkboard and load the plugin as shown below.\n\u0026lt;script src=\u0026#34;plugin/chalkboard/plugin.js\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;script src=\u0026#34;plugin/chalkboard/customcontrols.js\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;script\u0026gt; Reveal.initialize({ // ... plugins: [ RevealChalkboard, RevealCustomControls ], // ... }); \u0026lt;/script\u0026gt; The following stylesheet\n\u0026lt;link rel=\u0026#34;stylesheet\u0026#34; href=\u0026#34;plugin/chalkboard/style.css\u0026#34;\u0026gt; \u0026lt;link rel=\u0026#34;stylesheet\u0026#34; href=\u0026#34;plugin/customcontrols/style.css\u0026#34;\u0026gt; has to be included to the head section of you HTML-file.\nIn order to include buttons for opening and closing the notes canvas or the chalkboard you should make sure that font-awesome is available. The easiest way is to include\n\u0026lt;link rel=\u0026#34;stylesheet\u0026#34; href=\u0026#34;https://maxcdn.bootstrapcdn.com/font-awesome/4.5.0/css/font-awesome.min.css\u0026#34;\u0026gt; to the head section of you HTML-file.\nUsage Mouse or touch Click on the pen symbols at the bottom left to toggle the notes canvas or chalkboard Click on the color picker at the left to change the color (the color picker is only visible if the notes canvas or chalkboard is active) Click on the up/down arrows on the left to the switch among multiple chalkboardd (the up/down arrows are only available for the chlakboard) Click the left mouse button and drag to write on notes canvas or chalkboard Click the right mouse button and drag to wipe away previous drawings Touch and move to write on notes canvas or chalkboard Touch and hold for half a second, then move to wipe away previous drawings Keyboard Press the \u0026lsquo;BACKSPACE\u0026rsquo; key to delete all chalkboard drawings Press the \u0026lsquo;DEL\u0026rsquo; key to clear the notes canvas or chalkboard Press the \u0026lsquo;c\u0026rsquo; key to toggle the notes canvas Press the \u0026lsquo;b\u0026rsquo; key to toggle the chalkboard Press the \u0026rsquo;d\u0026rsquo; key to download drawings Press the \u0026lsquo;x\u0026rsquo; key to cycle colors forward Press the \u0026lsquo;y\u0026rsquo; key to cycle colors backward Playback If the autoSlide feature is set or if the audio-slideshow plugin is used, pre-recorded chalkboard drawings can be played. The slideshow plays back the user interaction with the chalkboard in the same way as it was conducted when recording the data.\nMultiplexing The plugin supports multiplexing via the multiplex plugin or the seminar plugin.\nPDF-Export If the slideshow is opened in print mode, the chalkboard drawings in the session storage (see storage option - print version must be opened in the same tab or window as the original slideshow) or provided in a file (see src option) are included in the PDF-file. Each drawing on the chalkboard is added after the slide that was shown when opening the chalkboard. Drawings on the notes canvas are not included in the PDF-file.\nConfiguration The plugin has several configuration options:\nboardmarkerWidth: an integer, the drawing width of the boardmarker; larger values draw thicker lines. chalkWidth: an integer, the drawing width of the chalk; larger values draw thicker lines. chalkEffect: a float in the range [0.0, 1.0], the intesity of the chalk effect on the chalk board. Full effect (default) 1.0, no effect 0.0. storage: Optional variable name for session storage of drawings. src: Optional filename for pre-recorded drawings. readOnly: Configuation option allowing to prevent changes to existing drawings. If set to true no changes can be made, if set to false false changes can be made, if unset or set to undefined no changes to the drawings can be made after returning to a slide or fragment for which drawings had been recorded before. In any case the recorded drawings for a slide or fragment can be cleared by pressing the \u0026lsquo;DEL\u0026rsquo; key (i.e. by using the RevealChalkboard.clear() function). transition: Gives the duration (in milliseconds) of the transition for a slide change, so that the notes canvas is drawn after the transition is completed. theme: Can be set to either \u0026quot;chalkboard\u0026quot; or \u0026quot;whiteboard\u0026quot;. The following configuration options allow to change the appearance of the notes canvas and the chalkboard. All of these options require two values, the first gives the value for the notes canvas, the second for the chalkboard.\nbackground: The first value expects a (semi-)transparent color which is used to provide visual feedback that the notes canvas is enabled, the second value expects a filename to a background image for the chalkboard. grid: By default whiteboard and chalkboard themes include a grid pattern on the background. This pattern can be modified by setting the color, the distance between lines, and the line width, e.g. { color: 'rgb(127,127,255,0.1)', distance: 40, width: 2}. Alternatively, the grid can be removed by setting the value to false. eraser: An image path and radius for the eraser. boardmarkers: A list of boardmarkers with given color and cursor. chalks: A list of chalks with given color and cursor. rememberColor: Whether to remember the last selected color for the slide canvas or the board. All of the configurations are optional and the default values shown below are used if the options are not provided.\nReveal.initialize({ // ... chalkboard: { boardmarkerWidth: 3, chalkWidth: 7, chalkEffect: 1.0, storage: null, src: null, readOnly: undefined, transition: 800, theme: \u0026#34;chalkboard\u0026#34;, background: [ \u0026#39;rgba(127,127,127,.1)\u0026#39; , path + \u0026#39;img/blackboard.png\u0026#39; ], grid: { color: \u0026#39;rgb(50,50,10,0.5)\u0026#39;, distance: 80, width: 2}, eraser: { src: path + \u0026#39;img/sponge.png\u0026#39;, radius: 20}, boardmarkers : [ { color: \u0026#39;rgba(100,100,100,1)\u0026#39;, cursor: \u0026#39;url(\u0026#39; + path + \u0026#39;img/boardmarker-black.png), auto\u0026#39;}, { color: \u0026#39;rgba(30,144,255, 1)\u0026#39;, cursor: \u0026#39;url(\u0026#39; + path + \u0026#39;img/boardmarker-blue.png), auto\u0026#39;}, { color: \u0026#39;rgba(220,20,60,1)\u0026#39;, cursor: \u0026#39;url(\u0026#39; + path + \u0026#39;img/boardmarker-red.png), auto\u0026#39;}, { color: \u0026#39;rgba(50,205,50,1)\u0026#39;, cursor: \u0026#39;url(\u0026#39; + path + \u0026#39;img/boardmarker-green.png), auto\u0026#39;}, { color: \u0026#39;rgba(255,140,0,1)\u0026#39;, cursor: \u0026#39;url(\u0026#39; + path + \u0026#39;img/boardmarker-orange.png), auto\u0026#39;}, { color: \u0026#39;rgba(150,0,20150,1)\u0026#39;, cursor: \u0026#39;url(\u0026#39; + path + \u0026#39;img/boardmarker-purple.png), auto\u0026#39;}, { color: \u0026#39;rgba(255,220,0,1)\u0026#39;, cursor: \u0026#39;url(\u0026#39; + path + \u0026#39;img/boardmarker-yellow.png), auto\u0026#39;} ], chalks: [ { color: \u0026#39;rgba(255,255,255,0.5)\u0026#39;, cursor: \u0026#39;url(\u0026#39; + path + \u0026#39;img/chalk-white.png), auto\u0026#39;}, { color: \u0026#39;rgba(96, 154, 244, 0.5)\u0026#39;, cursor: \u0026#39;url(\u0026#39; + path + \u0026#39;img/chalk-blue.png), auto\u0026#39;}, { color: \u0026#39;rgba(237, 20, 28, 0.5)\u0026#39;, cursor: \u0026#39;url(\u0026#39; + path + \u0026#39;img/chalk-red.png), auto\u0026#39;}, { color: \u0026#39;rgba(20, 237, 28, 0.5)\u0026#39;, cursor: \u0026#39;url(\u0026#39; + path + \u0026#39;img/chalk-green.png), auto\u0026#39;}, { color: \u0026#39;rgba(220, 133, 41, 0.5)\u0026#39;, cursor: \u0026#39;url(\u0026#39; + path + \u0026#39;img/chalk-orange.png), auto\u0026#39;}, { color: \u0026#39;rgba(220,0,220,0.5)\u0026#39;, cursor: \u0026#39;url(\u0026#39; + path + \u0026#39;img/chalk-purple.png), auto\u0026#39;}, { color: \u0026#39;rgba(255,220,0,0.5)\u0026#39;, cursor: \u0026#39;url(\u0026#39; + path + \u0026#39;img/chalk-yellow.png), auto\u0026#39;} ] }, customcontrols: { controls: [ { icon: \u0026#39;\u0026lt;i class=\u0026#34;fa fa-pen-square\u0026#34;\u0026gt;\u0026lt;/i\u0026gt;\u0026#39;, title: \u0026#39;Toggle chalkboard (B)\u0026#39;, action: \u0026#39;RevealChalkboard.toggleChalkboard();\u0026#39; }, { icon: \u0026#39;\u0026lt;i class=\u0026#34;fa fa-pen\u0026#34;\u0026gt;\u0026lt;/i\u0026gt;\u0026#39;, title: \u0026#39;Toggle notes canvas (C)\u0026#39;, action: \u0026#39;RevealChalkboard.toggleNotesCanvas();\u0026#39; } ] }, // ... }); License MIT licensed\nCopyright (C) 2021 Asvin Goel\n"
},
{
	"uri": "https://mszturc.github.io/obsidian-advanced-slides/examples/consult/plugin/customcontrols/readme/",
	"title": "",
	"tags": [],
	"description": "",
	"content": "Custom controls This plugin allows to add responsive custom controls to reveal.js which allow arbitrary positioning, layout, and behaviour of the controls.\nCheck out the live demo\nInstallation Copy the files plugin.js and style.css into the plugin folder of your reveal.js presentation, i.e. plugin/customcontrols and load the plugin as shown below.\n\u0026lt;link rel=\u0026#34;stylesheet\u0026#34; href=\u0026#34;plugin/customcontrols/style.css\u0026#34;\u0026gt; \u0026lt;script src=\u0026#34;plugin/customcontrols/plugin.js\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;script\u0026gt; Reveal.initialize({ // ... plugins: [ RevealCustomControls ], // ... }); \u0026lt;/script\u0026gt; Note, without configuration you need to add\n\u0026lt;link rel=\u0026#34;stylesheet\u0026#34; href=\u0026#34;https://maxcdn.bootstrapcdn.com/font-awesome/4.5.0/css/font-awesome.min.css\u0026#34;\u0026gt; between \u0026lt;head\u0026gt; and \u0026lt;/head\u0026gt; of your HTML file because the defaults use Font Awesome.\nConfiguration The plugin can be configured by adding custom controls and changing the layout of the slide number, e.g., by:\nReveal.initialize({ // ... customcontrols: { controls: [ { id: \u0026#39;toggle-overview\u0026#39;, title: \u0026#39;Toggle overview (O)\u0026#39;, icon: \u0026#39;\u0026lt;i class=\u0026#34;fa fa-th\u0026#34;\u0026gt;\u0026lt;/i\u0026gt;\u0026#39;, action: \u0026#39;Reveal.toggleOverview();\u0026#39; }, { icon: \u0026#39;\u0026lt;i class=\u0026#34;fa fa-pen-square\u0026#34;\u0026gt;\u0026lt;/i\u0026gt;\u0026#39;, title: \u0026#39;Toggle chalkboard (B)\u0026#39;, action: \u0026#39;RevealChalkboard.toggleChalkboard();\u0026#39; }, { icon: \u0026#39;\u0026lt;i class=\u0026#34;fa fa-pen\u0026#34;\u0026gt;\u0026lt;/i\u0026gt;\u0026#39;, title: \u0026#39;Toggle notes canvas (C)\u0026#39;, action: \u0026#39;RevealChalkboard.toggleNotesCanvas();\u0026#39; } ] }, // ... }); The id and title are optional. The configuration should be self explaining and any number of controls can be added. The style file can be altered to control the layout and responsiveness of the custom controls.\nLicense MIT licensed\nCopyright (C) 2020 Asvin Goel\n"
},
{
	"uri": "https://mszturc.github.io/obsidian-advanced-slides/examples/consult/plugin/menu/contributing/",
	"title": "",
	"tags": [],
	"description": "",
	"content": "Contributing Bug Reports When reporting a bug make sure to include information about which browser and operating system you are on as well as the necessary steps to reproduce the issue. If possible please include a link to a sample presentation where the bug can be tested.\nPull Requests Should follow the coding style of the file you work in Should be made towards the dev branch Should be submitted from a feature/topic branch (not your master) "
},
{
	"uri": "https://mszturc.github.io/obsidian-advanced-slides/examples/consult/plugin/menu/readme/",
	"title": "",
	"tags": [],
	"description": "",
	"content": "reveal.js-menu A slideout menu plugin for Reveal.js to quickly jump to any slide by title. Also optionally change the theme and set the default transition. Check out the live demo\nInstallation Bower Download and install the package in your project:\nbower install reveal.js-menu\nAdd the plugin to your presentation, as below.\n\u0026lt;script src=\u0026#34;bower_components/reveal.js-menu/menu.js\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;script\u0026gt; Reveal.initialize({ plugins: [ RevealMenu ] }); \u0026lt;/script\u0026gt; npm Download and install the package in your project:\nnpm install --save reveal.js-menu\nAdd the plugin to your presentation, as below.\n\u0026lt;script src=\u0026#34;node_modules/reveal.js-menu/menu.js\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;script\u0026gt; Reveal.initialize({ plugins: [ RevealMenu ] }); \u0026lt;/script\u0026gt; Manual Copy this repository into the plugins folder of your reveal.js presentation, ie plugins/menu.\nAdd the plugin to the dependencies in your presentation, as below.\n\u0026lt;script src=\u0026#34;plugin/menu/menu.js\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;script\u0026gt; Reveal.initialize({ plugins: [ RevealMenu ] }); \u0026lt;/script\u0026gt; Configuration You can configure the menu for your presentation by providing a menu option in the reveal.js initialization options. Note that all config values are optional and will default as specified below.\nReveal.initialize({ // ... menu: { // Specifies which side of the presentation the menu will // be shown. Use \u0026#39;left\u0026#39; or \u0026#39;right\u0026#39;. side: \u0026#39;left\u0026#39;, // Specifies the width of the menu. // Can be one of the following: // \u0026#39;normal\u0026#39;, \u0026#39;wide\u0026#39;, \u0026#39;third\u0026#39;, \u0026#39;half\u0026#39;, \u0026#39;full\u0026#39;, or // any valid css length value width: \u0026#39;normal\u0026#39;, // Add slide numbers to the titles in the slide list. // Use \u0026#39;true\u0026#39; or format string (same as reveal.js slide numbers) numbers: false, // Specifies which slide elements will be used for generating // the slide titles in the menu. The default selects the first // heading element found in the slide, but you can specify any // valid css selector and the text from the first matching // element will be used. // Note: that a section data-menu-title attribute or an element // with a menu-title class will take precedence over this option titleSelector: \u0026#39;h1, h2, h3, h4, h5, h6\u0026#39;, // If slides do not have a matching title, attempt to use the // start of the text content as the title instead useTextContentForMissingTitles: false, // Hide slides from the menu that do not have a title. // Set to \u0026#39;true\u0026#39; to only list slides with titles. hideMissingTitles: false, // Adds markers to the slide titles to indicate the // progress through the presentation. Set to \u0026#39;false\u0026#39; // to hide the markers. markers: true, // Specify custom panels to be included in the menu, by // providing an array of objects with \u0026#39;title\u0026#39;, \u0026#39;icon\u0026#39; // properties, and either a \u0026#39;src\u0026#39; or \u0026#39;content\u0026#39; property. custom: false, // Specifies the themes that will be available in the themes // menu panel. Set to \u0026#39;true\u0026#39; to show the themes menu panel // with the default themes list. Alternatively, provide an // array to specify the themes to make available in the // themes menu panel, for example... // // [ // { name: \u0026#39;Black\u0026#39;, theme: \u0026#39;dist/theme/black.css\u0026#39; }, // { name: \u0026#39;White\u0026#39;, theme: \u0026#39;dist/theme/white.css\u0026#39; }, // { name: \u0026#39;League\u0026#39;, theme: \u0026#39;dist/theme/league.css\u0026#39; }, // { // name: \u0026#39;Dark\u0026#39;, // theme: \u0026#39;lib/reveal.js/dist/theme/black.css\u0026#39;, // highlightTheme: \u0026#39;lib/reveal.js/plugin/highlight/monokai.css\u0026#39; // }, // { // name: \u0026#39;Code: Zenburn\u0026#39;, // highlightTheme: \u0026#39;lib/reveal.js/plugin/highlight/zenburn.css\u0026#39; // } // ] // // Note: specifying highlightTheme without a theme will // change the code highlight theme while leaving the // presentation theme unchanged. themes: false, // Specifies the path to the default theme files. If your // presentation uses a different path to the standard reveal // layout then you need to provide this option, but only // when \u0026#39;themes\u0026#39; is set to \u0026#39;true\u0026#39;. If you provide your own // list of themes or \u0026#39;themes\u0026#39; is set to \u0026#39;false\u0026#39; the // \u0026#39;themesPath\u0026#39; option is ignored. themesPath: \u0026#39;dist/theme/\u0026#39;, // Specifies if the transitions menu panel will be shown. // Set to \u0026#39;true\u0026#39; to show the transitions menu panel with // the default transitions list. Alternatively, provide an // array to specify the transitions to make available in // the transitions panel, for example... // [\u0026#39;None\u0026#39;, \u0026#39;Fade\u0026#39;, \u0026#39;Slide\u0026#39;] transitions: false, // Adds a menu button to the slides to open the menu panel. // Set to \u0026#39;false\u0026#39; to hide the button. openButton: true, // If \u0026#39;true\u0026#39; allows the slide number in the presentation to // open the menu panel. The reveal.js slideNumber option must // be displayed for this to take effect openSlideNumber: false, // If true allows the user to open and navigate the menu using // the keyboard. Standard keyboard interaction with reveal // will be disabled while the menu is open. keyboard: true, // Normally the menu will close on user actions such as // selecting a menu item, or clicking the presentation area. // If \u0026#39;true\u0026#39;, the sticky option will leave the menu open // until it is explicitly closed, that is, using the close // button or pressing the ESC or m key (when the keyboard // interaction option is enabled). sticky: false, // If \u0026#39;true\u0026#39; standard menu items will be automatically opened // when navigating using the keyboard. Note: this only takes // effect when both the \u0026#39;keyboard\u0026#39; and \u0026#39;sticky\u0026#39; options are enabled. autoOpen: true, // If \u0026#39;true\u0026#39; the menu will not be created until it is explicitly // requested by calling RevealMenu.init(). Note this will delay // the creation of all menu panels, including custom panels, and // the menu button. delayInit: false, // If \u0026#39;true\u0026#39; the menu will be shown when the menu is initialised. openOnInit: false, // By default the menu will load it\u0026#39;s own font-awesome library // icons. If your presentation needs to load a different // font-awesome library the \u0026#39;loadIcons\u0026#39; option can be set to false // and the menu will not attempt to load the font-awesome library. loadIcons: true } }); Themes Stylesheet If you are using the themes panel you need to ensure the theme stylesheet in the presentation uses the id=\u0026quot;theme\u0026quot; attribute. For example\u0026hellip;\n\u0026lt;link rel=\u0026#34;stylesheet\u0026#34; href=\u0026#34;css/theme/black.css\u0026#34; id=\u0026#34;theme\u0026#34; /\u0026gt; If your themes configuration includes code highlight themes you need to ensure the highlights theme stylesheet in the presentation uses the id=\u0026quot;highlight-theme\u0026quot; attribute. For example\u0026hellip;\n\u0026lt;link rel=\u0026#34;stylesheet\u0026#34; href=\u0026#34;plugin/highlight/zenburn.css\u0026#34; id=\u0026#34;highlight-theme\u0026#34; /\u0026gt; Slide Titles The slide titles used in the menu can be supplied explicitly or are taken directly from the presentation, using the following rules\u0026hellip;\n1. The section\u0026rsquo;s data-menu-title attribute. If the slide\u0026rsquo;s section element contains a data-menu-title attribute this will be used for the slide title in the menu. For example\u0026hellip;\n\u0026lt;section data-menu-title=\u0026#34;Custom Menu Title\u0026#34;\u0026gt; \u0026lt;h1\u0026gt;Title\u0026lt;/h1\u0026gt; \u0026lt;p\u0026gt;...\u0026lt;/p\u0026gt; \u0026lt;/section\u0026gt; 2. Any element with the class menu-title. If the slide\u0026rsquo;s section contains an element with the class menu-title then the element\u0026rsquo;s text will be used for the title. The first such element found will be used if there are more than one. Note the element need not be displayed to be used. For example\u0026hellip;\n\u0026lt;section\u0026gt; \u0026lt;h1\u0026gt;Title\u0026lt;/h1\u0026gt; \u0026lt;span class=\u0026#34;menu-title\u0026#34; style=\u0026#34;display: none\u0026#34;\u0026gt;Custom Menu Title\u0026lt;/span\u0026gt; \u0026lt;p\u0026gt;...\u0026lt;/p\u0026gt; \u0026lt;/section\u0026gt; 3. The first heading found or a custom element selector The titleSelector option can be used to customise the elements that will be used to generate the slide titles in the menu. The default option selects the first heading element found in the slide. For example\u0026hellip;\n\u0026lt;section\u0026gt; \u0026lt;h3\u0026gt;This will be the slide title in the menu\u0026lt;/h3\u0026gt; \u0026lt;h1\u0026gt;Title\u0026lt;/h1\u0026gt; \u0026lt;p\u0026gt;...\u0026lt;/p\u0026gt; \u0026lt;/section\u0026gt; Any valid CSS selector should work but note the selector will only be applied to elements contained within the slide section. You could use the 'h1' selector to only use level 1 headings or 'p' to use the first paragraph element. For example, titleSelector: 'p.lead' would be used like this\u0026hellip;\n\u0026lt;section\u0026gt; \u0026lt;h1\u0026gt;Title\u0026lt;/h1\u0026gt; \u0026lt;p class=\u0026#34;lead\u0026#34;\u0026gt;This will be the slide title in the menu\u0026lt;/p\u0026gt; \u0026lt;p\u0026gt;...\u0026lt;/p\u0026gt; \u0026lt;/section\u0026gt; Using titleSelector: '' will ignore all elements and no title will be provided, unless the slide section contains a data-menu-title attribute or an element with the menu-title class.\n4. No title is provided If no title can be found using the above methods, a default title incorporating the slide number will be used. For example, the following would result in a slide title in the format of \u0026lsquo;Slide 12\u0026rsquo;\u0026hellip;\n\u0026lt;section\u0026gt; \u0026lt;p\u0026gt;...\u0026lt;/p\u0026gt; \u0026lt;/section\u0026gt; If the hideMissingTitles option is set to true, however, the slide will not be listed in the menu.\nCustom Menu Panels Additional custom panels can be added the menu using the custom option.\nReveal.initialize({ // ... menu: { // ... custom: [ { title: \u0026#39;Links\u0026#39;, icon: \u0026#39;\u0026lt;i class=\u0026#34;fa fa-external-link\u0026#34;\u0026gt;\u0026#39;, src: \u0026#39;links.html\u0026#39; }, { title: \u0026#39;About\u0026#39;, icon: \u0026#39;\u0026lt;i class=\u0026#34;fa fa-info\u0026#34;\u0026gt;\u0026#39;, content: \u0026#39;\u0026lt;p\u0026gt;This slidedeck is created with reveal.js\u0026lt;/p\u0026gt;\u0026#39; } ] } }); title and icon are used for the toolbar buttons at the top of the menu. There are two approaches you can use to provide content for the panels\u0026hellip;\nYou can provide a URL in src to load html from another file. Alternatively, you can provide html in content and this will be added to the custom panel. Custom slide menu items You can provide menu items in your custom panels using the following format. This allows you to define your own navigation links for your presentation.\n\u0026lt;h1\u0026gt;Links\u0026lt;/h1\u0026gt; \u0026lt;ul class=\u0026#34;slide-menu-items\u0026#34;\u0026gt; \u0026lt;li class=\u0026#34;slide-menu-item\u0026#34;\u0026gt;\u0026lt;a href=\u0026#34;#/transitions\u0026#34;\u0026gt;Transitions\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;li class=\u0026#34;slide-menu-item\u0026#34;\u0026gt;\u0026lt;a href=\u0026#34;#/13\u0026#34;\u0026gt;Code highlighting\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;/ul\u0026gt; You are not limited to linking to presentation slides. You can provide any link you wish.\n\u0026lt;h1\u0026gt;External Links\u0026lt;/h1\u0026gt; \u0026lt;ul class=\u0026#34;slide-menu-items\u0026#34;\u0026gt; \u0026lt;li class=\u0026#34;slide-menu-item\u0026#34;\u0026gt; \u0026lt;a href=\u0026#34;https://github.com/denehyg/reveal.js-menu\u0026#34;\u0026gt;Reveal.js-menu\u0026lt;/a\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li class=\u0026#34;slide-menu-item\u0026#34;\u0026gt; \u0026lt;a href=\u0026#34;https://github.com/hakimel/reveal.js\u0026#34;\u0026gt;Reveal.js\u0026lt;/a\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;/ul\u0026gt; Using menu items enables keyboard navigation of your links as with the other panels. However, you don\u0026rsquo;t have to use menu items for your links. You can simply provide standard links and unordered lists in your html. Notice you can provide your custom menu items mixed with other html if you wish.\nReady Event A \u0026lsquo;menu-ready\u0026rsquo; event is fired when reveal.js-menu has loaded all non-async dependencies and is ready to start navigating.\nReveal.addEventListener(\u0026#39;menu-ready\u0026#39;, function (event) { // your code }); API The RevealMenu object exposes a JavaScript API for controlling the menu:\nFunction Description toggle(event) Toggles the open state of the menu, ie open if it is closed, and close if it is open openMenu(event) Opens the menu closeMenu(event, force) Closes the menu. To force the menu to close (ie when sticky option is true) call closeMenu(null, true) openPanel(event, ref) Opens the menu to a specific panel, passing the name of the panel or the panel element itself isOpen() Returns true if the menu is open initialiseMenu() Initialises the menu if it has not already been initialised. Used in conjunction with the delayInit option isMenuInitialised() Returns true if the menu has been initialised Compatibility reveal.js-menu v2.0 is built for reveal.js v4. It will not work with reveal.js v3. If you require a menu for reveal.js v3 you will need to install reveal.js-menu v1.2.0.\nv2.0 also introduces API changes that are not backwards compatible. init() has been renamed to initMenu() to deconflict with the reveal.js v4 plugin API. isInit() has also been changed to isMenuInitialised().\nLicense MIT licensed\nCopyright (C) 2020 Greg Denehy\n"
},
{
	"uri": "https://mszturc.github.io/obsidian-advanced-slides/examples/legday/plugin/chalkboard/readme/",
	"title": "",
	"tags": [],
	"description": "",
	"content": "Chalkboard With this plugin you can add a chalkboard to reveal.js. The plugin provides two possibilities to include handwritten notes to your presentation:\nyou can make notes directly on the slides, e.g. to comment on certain aspects, you can open a chalkboard or whiteboard on which you can make notes. The main use case in mind when implementing the plugin is classroom usage in which you may want to explain some course content and quickly need to make some notes.\nThe plugin records all drawings made so that they can be play backed using the autoSlide feature or the audio-slideshow plugin.\nCheck out the live demo\nThe chalkboard effect is based on Chalkboard by Mohamed Moustafa.\nInstallation Copy the file plugin.js and the img directory into the plugin folder of your reveal.js presentation, i.e. plugin/chalkboard and load the plugin as shown below.\n\u0026lt;script src=\u0026#34;plugin/chalkboard/plugin.js\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;script src=\u0026#34;plugin/chalkboard/customcontrols.js\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;script\u0026gt; Reveal.initialize({ // ... plugins: [ RevealChalkboard, RevealCustomControls ], // ... }); \u0026lt;/script\u0026gt; The following stylesheet\n\u0026lt;link rel=\u0026#34;stylesheet\u0026#34; href=\u0026#34;plugin/chalkboard/style.css\u0026#34;\u0026gt; \u0026lt;link rel=\u0026#34;stylesheet\u0026#34; href=\u0026#34;plugin/customcontrols/style.css\u0026#34;\u0026gt; has to be included to the head section of you HTML-file.\nIn order to include buttons for opening and closing the notes canvas or the chalkboard you should make sure that font-awesome is available. The easiest way is to include\n\u0026lt;link rel=\u0026#34;stylesheet\u0026#34; href=\u0026#34;https://maxcdn.bootstrapcdn.com/font-awesome/4.5.0/css/font-awesome.min.css\u0026#34;\u0026gt; to the head section of you HTML-file.\nUsage Mouse or touch Click on the pen symbols at the bottom left to toggle the notes canvas or chalkboard Click on the color picker at the left to change the color (the color picker is only visible if the notes canvas or chalkboard is active) Click on the up/down arrows on the left to the switch among multiple chalkboardd (the up/down arrows are only available for the chlakboard) Click the left mouse button and drag to write on notes canvas or chalkboard Click the right mouse button and drag to wipe away previous drawings Touch and move to write on notes canvas or chalkboard Touch and hold for half a second, then move to wipe away previous drawings Keyboard Press the \u0026lsquo;BACKSPACE\u0026rsquo; key to delete all chalkboard drawings Press the \u0026lsquo;DEL\u0026rsquo; key to clear the notes canvas or chalkboard Press the \u0026lsquo;c\u0026rsquo; key to toggle the notes canvas Press the \u0026lsquo;b\u0026rsquo; key to toggle the chalkboard Press the \u0026rsquo;d\u0026rsquo; key to download drawings Press the \u0026lsquo;x\u0026rsquo; key to cycle colors forward Press the \u0026lsquo;y\u0026rsquo; key to cycle colors backward Playback If the autoSlide feature is set or if the audio-slideshow plugin is used, pre-recorded chalkboard drawings can be played. The slideshow plays back the user interaction with the chalkboard in the same way as it was conducted when recording the data.\nMultiplexing The plugin supports multiplexing via the multiplex plugin or the seminar plugin.\nPDF-Export If the slideshow is opened in print mode, the chalkboard drawings in the session storage (see storage option - print version must be opened in the same tab or window as the original slideshow) or provided in a file (see src option) are included in the PDF-file. Each drawing on the chalkboard is added after the slide that was shown when opening the chalkboard. Drawings on the notes canvas are not included in the PDF-file.\nConfiguration The plugin has several configuration options:\nboardmarkerWidth: an integer, the drawing width of the boardmarker; larger values draw thicker lines. chalkWidth: an integer, the drawing width of the chalk; larger values draw thicker lines. chalkEffect: a float in the range [0.0, 1.0], the intesity of the chalk effect on the chalk board. Full effect (default) 1.0, no effect 0.0. storage: Optional variable name for session storage of drawings. src: Optional filename for pre-recorded drawings. readOnly: Configuation option allowing to prevent changes to existing drawings. If set to true no changes can be made, if set to false false changes can be made, if unset or set to undefined no changes to the drawings can be made after returning to a slide or fragment for which drawings had been recorded before. In any case the recorded drawings for a slide or fragment can be cleared by pressing the \u0026lsquo;DEL\u0026rsquo; key (i.e. by using the RevealChalkboard.clear() function). transition: Gives the duration (in milliseconds) of the transition for a slide change, so that the notes canvas is drawn after the transition is completed. theme: Can be set to either \u0026quot;chalkboard\u0026quot; or \u0026quot;whiteboard\u0026quot;. The following configuration options allow to change the appearance of the notes canvas and the chalkboard. All of these options require two values, the first gives the value for the notes canvas, the second for the chalkboard.\nbackground: The first value expects a (semi-)transparent color which is used to provide visual feedback that the notes canvas is enabled, the second value expects a filename to a background image for the chalkboard. grid: By default whiteboard and chalkboard themes include a grid pattern on the background. This pattern can be modified by setting the color, the distance between lines, and the line width, e.g. { color: 'rgb(127,127,255,0.1)', distance: 40, width: 2}. Alternatively, the grid can be removed by setting the value to false. eraser: An image path and radius for the eraser. boardmarkers: A list of boardmarkers with given color and cursor. chalks: A list of chalks with given color and cursor. rememberColor: Whether to remember the last selected color for the slide canvas or the board. All of the configurations are optional and the default values shown below are used if the options are not provided.\nReveal.initialize({ // ... chalkboard: { boardmarkerWidth: 3, chalkWidth: 7, chalkEffect: 1.0, storage: null, src: null, readOnly: undefined, transition: 800, theme: \u0026#34;chalkboard\u0026#34;, background: [ \u0026#39;rgba(127,127,127,.1)\u0026#39; , path + \u0026#39;img/blackboard.png\u0026#39; ], grid: { color: \u0026#39;rgb(50,50,10,0.5)\u0026#39;, distance: 80, width: 2}, eraser: { src: path + \u0026#39;img/sponge.png\u0026#39;, radius: 20}, boardmarkers : [ { color: \u0026#39;rgba(100,100,100,1)\u0026#39;, cursor: \u0026#39;url(\u0026#39; + path + \u0026#39;img/boardmarker-black.png), auto\u0026#39;}, { color: \u0026#39;rgba(30,144,255, 1)\u0026#39;, cursor: \u0026#39;url(\u0026#39; + path + \u0026#39;img/boardmarker-blue.png), auto\u0026#39;}, { color: \u0026#39;rgba(220,20,60,1)\u0026#39;, cursor: \u0026#39;url(\u0026#39; + path + \u0026#39;img/boardmarker-red.png), auto\u0026#39;}, { color: \u0026#39;rgba(50,205,50,1)\u0026#39;, cursor: \u0026#39;url(\u0026#39; + path + \u0026#39;img/boardmarker-green.png), auto\u0026#39;}, { color: \u0026#39;rgba(255,140,0,1)\u0026#39;, cursor: \u0026#39;url(\u0026#39; + path + \u0026#39;img/boardmarker-orange.png), auto\u0026#39;}, { color: \u0026#39;rgba(150,0,20150,1)\u0026#39;, cursor: \u0026#39;url(\u0026#39; + path + \u0026#39;img/boardmarker-purple.png), auto\u0026#39;}, { color: \u0026#39;rgba(255,220,0,1)\u0026#39;, cursor: \u0026#39;url(\u0026#39; + path + \u0026#39;img/boardmarker-yellow.png), auto\u0026#39;} ], chalks: [ { color: \u0026#39;rgba(255,255,255,0.5)\u0026#39;, cursor: \u0026#39;url(\u0026#39; + path + \u0026#39;img/chalk-white.png), auto\u0026#39;}, { color: \u0026#39;rgba(96, 154, 244, 0.5)\u0026#39;, cursor: \u0026#39;url(\u0026#39; + path + \u0026#39;img/chalk-blue.png), auto\u0026#39;}, { color: \u0026#39;rgba(237, 20, 28, 0.5)\u0026#39;, cursor: \u0026#39;url(\u0026#39; + path + \u0026#39;img/chalk-red.png), auto\u0026#39;}, { color: \u0026#39;rgba(20, 237, 28, 0.5)\u0026#39;, cursor: \u0026#39;url(\u0026#39; + path + \u0026#39;img/chalk-green.png), auto\u0026#39;}, { color: \u0026#39;rgba(220, 133, 41, 0.5)\u0026#39;, cursor: \u0026#39;url(\u0026#39; + path + \u0026#39;img/chalk-orange.png), auto\u0026#39;}, { color: \u0026#39;rgba(220,0,220,0.5)\u0026#39;, cursor: \u0026#39;url(\u0026#39; + path + \u0026#39;img/chalk-purple.png), auto\u0026#39;}, { color: \u0026#39;rgba(255,220,0,0.5)\u0026#39;, cursor: \u0026#39;url(\u0026#39; + path + \u0026#39;img/chalk-yellow.png), auto\u0026#39;} ] }, customcontrols: { controls: [ { icon: \u0026#39;\u0026lt;i class=\u0026#34;fa fa-pen-square\u0026#34;\u0026gt;\u0026lt;/i\u0026gt;\u0026#39;, title: \u0026#39;Toggle chalkboard (B)\u0026#39;, action: \u0026#39;RevealChalkboard.toggleChalkboard();\u0026#39; }, { icon: \u0026#39;\u0026lt;i class=\u0026#34;fa fa-pen\u0026#34;\u0026gt;\u0026lt;/i\u0026gt;\u0026#39;, title: \u0026#39;Toggle notes canvas (C)\u0026#39;, action: \u0026#39;RevealChalkboard.toggleNotesCanvas();\u0026#39; } ] }, // ... }); License MIT licensed\nCopyright (C) 2021 Asvin Goel\n"
},
{
	"uri": "https://mszturc.github.io/obsidian-advanced-slides/examples/legday/plugin/chart/readme/",
	"title": "",
	"tags": [],
	"description": "",
	"content": "Chart A plugin for Reveal.js allowing to easily add charts using Chart.js.\nCheck out the live demo\nInstallation Copy the file plugin.js into the plugin folder of your reveal.js presentation, i.e. plugin/chart.\nAdd the plugin and Chart.js to the dependencies in your presentation, as below.\n\u0026lt;script src=\u0026#34;https://cdnjs.cloudflare.com/ajax/libs/Chart.js/3.2.0/chart.min.js\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;script src=\u0026#34;plugin/chart/plugin.js\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;script\u0026gt; Reveal.initialize({ // ... plugins: [ RevealChart ], // ... }); \u0026lt;/script\u0026gt; Configuration The plugin has several parameters that you can set for your presentation by providing an chart option in the reveal.js initialization options. Note that all configuration parameters are optional and the defaults of Chart.js will be used for parameters that are not specified.\nReveal.initialize({ // ... chart: { defaults: { color: \u0026#39;lightgray\u0026#39;, // color of labels scale: { beginAtZero: true, ticks: { stepSize: 1 }, grid: { color: \u0026#34;lightgray\u0026#34; } , // color of grid lines }, }, line: { borderColor: [ \u0026#34;rgba(20,220,220,.8)\u0026#34; , \u0026#34;rgba(220,120,120,.8)\u0026#34;, \u0026#34;rgba(20,120,220,.8)\u0026#34; ], \u0026#34;borderDash\u0026#34;: [ [5,10], [0,0] ] }, bar: { backgroundColor: [ \u0026#34;rgba(20,220,220,.8)\u0026#34; , \u0026#34;rgba(220,120,120,.8)\u0026#34;, \u0026#34;rgba(20,120,220,.8)\u0026#34; ]}, pie: { backgroundColor: [ [\u0026#34;rgba(0,0,0,.8)\u0026#34; , \u0026#34;rgba(220,20,20,.8)\u0026#34;, \u0026#34;rgba(20,220,20,.8)\u0026#34;, \u0026#34;rgba(220,220,20,.8)\u0026#34;, \u0026#34;rgba(20,20,220,.8)\u0026#34;] ]}, }, // ... }); The defaults parameter will overwrite Chart.defaults. Furthermore, for any chart type, e.g. line, bar, etc., the parameters for the individual datasets can be specified. Where Chart.js allows to specify a single parameter for a particular dataset, the plugin allows to specify an array of values for this parameter, which will automatically be assigned to the different datasets. Note that if there are more datasets than elements in the array, the plugin will start again with the first value in the array.\nUsage A chart can be included in a slide by adding a canvas element with the data-chart attribute set to the desired chart type.\nThe chart can be configured within the canvas body by a JSON string embedded into an HTML comment.\n\u0026lt;canvas data-chart=\u0026#34;line\u0026#34; \u0026gt; \u0026lt;!-- { \u0026#34;data\u0026#34;: { \u0026#34;labels\u0026#34;: [\u0026#34;January\u0026#34;,\u0026#34; February\u0026#34;,\u0026#34; March\u0026#34;,\u0026#34; April\u0026#34;,\u0026#34; May\u0026#34;,\u0026#34; June\u0026#34;,\u0026#34; July\u0026#34;], \u0026#34;datasets\u0026#34;:[ { \u0026#34;data\u0026#34;:[65,59,80,81,56,55,40], \u0026#34;label\u0026#34;:\u0026#34;My first dataset\u0026#34;,\u0026#34;backgroundColor\u0026#34;:\u0026#34;rgba(20,220,220,.8)\u0026#34; }, { \u0026#34;data\u0026#34;:[28,48,40,19,86,27,90], \u0026#34;label\u0026#34;:\u0026#34;My second dataset\u0026#34;,\u0026#34;backgroundColor\u0026#34;:\u0026#34;rgba(220,120,120,.8)\u0026#34; } ] } } --\u0026gt; \u0026lt;/canvas\u0026gt; It is possible to provide the chart data by comma separated values and use the JSON string within the HTML comment to configure the chart layout.\n\u0026lt;canvas class=\u0026#34;stretch\u0026#34; data-chart=\u0026#34;line\u0026#34;\u0026gt; My first dataset, 65, 59, 80, 81, 56, 55, 40 \u0026lt;!-- This is a comment that will be ignored --\u0026gt; My second dataset, 28, 48, 40, 19, 86, 27, 90 \u0026lt;!-- { \u0026#34;data\u0026#34; : { \u0026#34;labels\u0026#34; : [\u0026#34;Enero\u0026#34;, \u0026#34;Febrero\u0026#34;, \u0026#34;Marzo\u0026#34;, \u0026#34;Avril\u0026#34;, \u0026#34;Mayo\u0026#34;, \u0026#34;Junio\u0026#34;, \u0026#34;Julio\u0026#34;], \u0026#34;datasets\u0026#34; : [{ \u0026#34;borderColor\u0026#34;: \u0026#34;#0f0\u0026#34;, \u0026#34;borderDash\u0026#34;: [\u0026#34;5\u0026#34;,\u0026#34;10\u0026#34;] }, { \u0026#34;borderColor\u0026#34;: \u0026#34;#0ff\u0026#34; } ] } } --\u0026gt; \u0026lt;/canvas\u0026gt; The layout configuration provided in chart parameter (see Configuration) will be used by default and only those parameters that are specified in a JSON string are used to overwrite the default values. If no JSON string is provided to configure the chart layout the default configuration is used. Note, that if no labels for the data points are provided by a JSON string, the plugin expects that the first row provides table headers.\n\u0026lt;canvas data-chart=\u0026#34;line\u0026#34;\u0026gt; Month, January, February, March, April, May, June, July My first dataset, 65, 59, 80, 81, 56, 55, 40 My second dataset, 28, 48, 40, 19, 86, 27, 90 \u0026lt;/canvas\u0026gt; The chart data can also be provided in an external CSV file. To include external data, the filename must be specified using the data-chart-src attribute of the canvas element. The CSV file is expected to only contain data values, whereas options for drawing the chart can be given as described above.\n\u0026lt;canvas data-chart=\u0026#34;bar\u0026#34; data-chart-src=\u0026#34;chart/data.csv\u0026#34;\u0026gt; \u0026lt;!-- { \u0026#34;data\u0026#34; : { \u0026#34;datasets\u0026#34; : [{ \u0026#34;backgroundColor\u0026#34;: \u0026#34;#0f0\u0026#34; }, { \u0026#34;backgroundColor\u0026#34;: \u0026#34;#0ff\u0026#34; } ] }, \u0026#34;options\u0026#34;: { \u0026#34;scales\u0026#34;: { \u0026#34;x\u0026#34;: { \u0026#34;stacked\u0026#34;: true }, \u0026#34;y\u0026#34;: { \u0026#34;stacked\u0026#34;: true } } } } --\u0026gt; \u0026lt;/canvas\u0026gt; License MIT licensed\nCopyright (C) 2021 Asvin Goel\n"
},
{
	"uri": "https://mszturc.github.io/obsidian-advanced-slides/examples/legday/plugin/customcontrols/readme/",
	"title": "",
	"tags": [],
	"description": "",
	"content": "Custom controls This plugin allows to add responsive custom controls to reveal.js which allow arbitrary positioning, layout, and behaviour of the controls.\nCheck out the live demo\nInstallation Copy the files plugin.js and style.css into the plugin folder of your reveal.js presentation, i.e. plugin/customcontrols and load the plugin as shown below.\n\u0026lt;link rel=\u0026#34;stylesheet\u0026#34; href=\u0026#34;plugin/customcontrols/style.css\u0026#34;\u0026gt; \u0026lt;script src=\u0026#34;plugin/customcontrols/plugin.js\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;script\u0026gt; Reveal.initialize({ // ... plugins: [ RevealCustomControls ], // ... }); \u0026lt;/script\u0026gt; Note, without configuration you need to add\n\u0026lt;link rel=\u0026#34;stylesheet\u0026#34; href=\u0026#34;https://maxcdn.bootstrapcdn.com/font-awesome/4.5.0/css/font-awesome.min.css\u0026#34;\u0026gt; between \u0026lt;head\u0026gt; and \u0026lt;/head\u0026gt; of your HTML file because the defaults use Font Awesome.\nConfiguration The plugin can be configured by adding custom controls and changing the layout of the slide number, e.g., by:\nReveal.initialize({ // ... customcontrols: { controls: [ { id: \u0026#39;toggle-overview\u0026#39;, title: \u0026#39;Toggle overview (O)\u0026#39;, icon: \u0026#39;\u0026lt;i class=\u0026#34;fa fa-th\u0026#34;\u0026gt;\u0026lt;/i\u0026gt;\u0026#39;, action: \u0026#39;Reveal.toggleOverview();\u0026#39; }, { icon: \u0026#39;\u0026lt;i class=\u0026#34;fa fa-pen-square\u0026#34;\u0026gt;\u0026lt;/i\u0026gt;\u0026#39;, title: \u0026#39;Toggle chalkboard (B)\u0026#39;, action: \u0026#39;RevealChalkboard.toggleChalkboard();\u0026#39; }, { icon: \u0026#39;\u0026lt;i class=\u0026#34;fa fa-pen\u0026#34;\u0026gt;\u0026lt;/i\u0026gt;\u0026#39;, title: \u0026#39;Toggle notes canvas (C)\u0026#39;, action: \u0026#39;RevealChalkboard.toggleNotesCanvas();\u0026#39; } ] }, // ... }); The id and title are optional. The configuration should be self explaining and any number of controls can be added. The style file can be altered to control the layout and responsiveness of the custom controls.\nLicense MIT licensed\nCopyright (C) 2020 Asvin Goel\n"
},
{
	"uri": "https://mszturc.github.io/obsidian-advanced-slides/examples/legday/plugin/menu/contributing/",
	"title": "",
	"tags": [],
	"description": "",
	"content": "Contributing Bug Reports When reporting a bug make sure to include information about which browser and operating system you are on as well as the necessary steps to reproduce the issue. If possible please include a link to a sample presentation where the bug can be tested.\nPull Requests Should follow the coding style of the file you work in Should be made towards the dev branch Should be submitted from a feature/topic branch (not your master) "
},
{
	"uri": "https://mszturc.github.io/obsidian-advanced-slides/examples/legday/plugin/menu/readme/",
	"title": "",
	"tags": [],
	"description": "",
	"content": "reveal.js-menu A slideout menu plugin for Reveal.js to quickly jump to any slide by title. Also optionally change the theme and set the default transition. Check out the live demo\nInstallation Bower Download and install the package in your project:\nbower install reveal.js-menu\nAdd the plugin to your presentation, as below.\n\u0026lt;script src=\u0026#34;bower_components/reveal.js-menu/menu.js\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;script\u0026gt; Reveal.initialize({ plugins: [ RevealMenu ] }); \u0026lt;/script\u0026gt; npm Download and install the package in your project:\nnpm install --save reveal.js-menu\nAdd the plugin to your presentation, as below.\n\u0026lt;script src=\u0026#34;node_modules/reveal.js-menu/menu.js\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;script\u0026gt; Reveal.initialize({ plugins: [ RevealMenu ] }); \u0026lt;/script\u0026gt; Manual Copy this repository into the plugins folder of your reveal.js presentation, ie plugins/menu.\nAdd the plugin to the dependencies in your presentation, as below.\n\u0026lt;script src=\u0026#34;plugin/menu/menu.js\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;script\u0026gt; Reveal.initialize({ plugins: [ RevealMenu ] }); \u0026lt;/script\u0026gt; Configuration You can configure the menu for your presentation by providing a menu option in the reveal.js initialization options. Note that all config values are optional and will default as specified below.\nReveal.initialize({ // ... menu: { // Specifies which side of the presentation the menu will // be shown. Use \u0026#39;left\u0026#39; or \u0026#39;right\u0026#39;. side: \u0026#39;left\u0026#39;, // Specifies the width of the menu. // Can be one of the following: // \u0026#39;normal\u0026#39;, \u0026#39;wide\u0026#39;, \u0026#39;third\u0026#39;, \u0026#39;half\u0026#39;, \u0026#39;full\u0026#39;, or // any valid css length value width: \u0026#39;normal\u0026#39;, // Add slide numbers to the titles in the slide list. // Use \u0026#39;true\u0026#39; or format string (same as reveal.js slide numbers) numbers: false, // Specifies which slide elements will be used for generating // the slide titles in the menu. The default selects the first // heading element found in the slide, but you can specify any // valid css selector and the text from the first matching // element will be used. // Note: that a section data-menu-title attribute or an element // with a menu-title class will take precedence over this option titleSelector: \u0026#39;h1, h2, h3, h4, h5, h6\u0026#39;, // If slides do not have a matching title, attempt to use the // start of the text content as the title instead useTextContentForMissingTitles: false, // Hide slides from the menu that do not have a title. // Set to \u0026#39;true\u0026#39; to only list slides with titles. hideMissingTitles: false, // Adds markers to the slide titles to indicate the // progress through the presentation. Set to \u0026#39;false\u0026#39; // to hide the markers. markers: true, // Specify custom panels to be included in the menu, by // providing an array of objects with \u0026#39;title\u0026#39;, \u0026#39;icon\u0026#39; // properties, and either a \u0026#39;src\u0026#39; or \u0026#39;content\u0026#39; property. custom: false, // Specifies the themes that will be available in the themes // menu panel. Set to \u0026#39;true\u0026#39; to show the themes menu panel // with the default themes list. Alternatively, provide an // array to specify the themes to make available in the // themes menu panel, for example... // // [ // { name: \u0026#39;Black\u0026#39;, theme: \u0026#39;dist/theme/black.css\u0026#39; }, // { name: \u0026#39;White\u0026#39;, theme: \u0026#39;dist/theme/white.css\u0026#39; }, // { name: \u0026#39;League\u0026#39;, theme: \u0026#39;dist/theme/league.css\u0026#39; }, // { // name: \u0026#39;Dark\u0026#39;, // theme: \u0026#39;lib/reveal.js/dist/theme/black.css\u0026#39;, // highlightTheme: \u0026#39;lib/reveal.js/plugin/highlight/monokai.css\u0026#39; // }, // { // name: \u0026#39;Code: Zenburn\u0026#39;, // highlightTheme: \u0026#39;lib/reveal.js/plugin/highlight/zenburn.css\u0026#39; // } // ] // // Note: specifying highlightTheme without a theme will // change the code highlight theme while leaving the // presentation theme unchanged. themes: false, // Specifies the path to the default theme files. If your // presentation uses a different path to the standard reveal // layout then you need to provide this option, but only // when \u0026#39;themes\u0026#39; is set to \u0026#39;true\u0026#39;. If you provide your own // list of themes or \u0026#39;themes\u0026#39; is set to \u0026#39;false\u0026#39; the // \u0026#39;themesPath\u0026#39; option is ignored. themesPath: \u0026#39;dist/theme/\u0026#39;, // Specifies if the transitions menu panel will be shown. // Set to \u0026#39;true\u0026#39; to show the transitions menu panel with // the default transitions list. Alternatively, provide an // array to specify the transitions to make available in // the transitions panel, for example... // [\u0026#39;None\u0026#39;, \u0026#39;Fade\u0026#39;, \u0026#39;Slide\u0026#39;] transitions: false, // Adds a menu button to the slides to open the menu panel. // Set to \u0026#39;false\u0026#39; to hide the button. openButton: true, // If \u0026#39;true\u0026#39; allows the slide number in the presentation to // open the menu panel. The reveal.js slideNumber option must // be displayed for this to take effect openSlideNumber: false, // If true allows the user to open and navigate the menu using // the keyboard. Standard keyboard interaction with reveal // will be disabled while the menu is open. keyboard: true, // Normally the menu will close on user actions such as // selecting a menu item, or clicking the presentation area. // If \u0026#39;true\u0026#39;, the sticky option will leave the menu open // until it is explicitly closed, that is, using the close // button or pressing the ESC or m key (when the keyboard // interaction option is enabled). sticky: false, // If \u0026#39;true\u0026#39; standard menu items will be automatically opened // when navigating using the keyboard. Note: this only takes // effect when both the \u0026#39;keyboard\u0026#39; and \u0026#39;sticky\u0026#39; options are enabled. autoOpen: true, // If \u0026#39;true\u0026#39; the menu will not be created until it is explicitly // requested by calling RevealMenu.init(). Note this will delay // the creation of all menu panels, including custom panels, and // the menu button. delayInit: false, // If \u0026#39;true\u0026#39; the menu will be shown when the menu is initialised. openOnInit: false, // By default the menu will load it\u0026#39;s own font-awesome library // icons. If your presentation needs to load a different // font-awesome library the \u0026#39;loadIcons\u0026#39; option can be set to false // and the menu will not attempt to load the font-awesome library. loadIcons: true } }); Themes Stylesheet If you are using the themes panel you need to ensure the theme stylesheet in the presentation uses the id=\u0026quot;theme\u0026quot; attribute. For example\u0026hellip;\n\u0026lt;link rel=\u0026#34;stylesheet\u0026#34; href=\u0026#34;css/theme/black.css\u0026#34; id=\u0026#34;theme\u0026#34; /\u0026gt; If your themes configuration includes code highlight themes you need to ensure the highlights theme stylesheet in the presentation uses the id=\u0026quot;highlight-theme\u0026quot; attribute. For example\u0026hellip;\n\u0026lt;link rel=\u0026#34;stylesheet\u0026#34; href=\u0026#34;plugin/highlight/zenburn.css\u0026#34; id=\u0026#34;highlight-theme\u0026#34; /\u0026gt; Slide Titles The slide titles used in the menu can be supplied explicitly or are taken directly from the presentation, using the following rules\u0026hellip;\n1. The section\u0026rsquo;s data-menu-title attribute. If the slide\u0026rsquo;s section element contains a data-menu-title attribute this will be used for the slide title in the menu. For example\u0026hellip;\n\u0026lt;section data-menu-title=\u0026#34;Custom Menu Title\u0026#34;\u0026gt; \u0026lt;h1\u0026gt;Title\u0026lt;/h1\u0026gt; \u0026lt;p\u0026gt;...\u0026lt;/p\u0026gt; \u0026lt;/section\u0026gt; 2. Any element with the class menu-title. If the slide\u0026rsquo;s section contains an element with the class menu-title then the element\u0026rsquo;s text will be used for the title. The first such element found will be used if there are more than one. Note the element need not be displayed to be used. For example\u0026hellip;\n\u0026lt;section\u0026gt; \u0026lt;h1\u0026gt;Title\u0026lt;/h1\u0026gt; \u0026lt;span class=\u0026#34;menu-title\u0026#34; style=\u0026#34;display: none\u0026#34;\u0026gt;Custom Menu Title\u0026lt;/span\u0026gt; \u0026lt;p\u0026gt;...\u0026lt;/p\u0026gt; \u0026lt;/section\u0026gt; 3. The first heading found or a custom element selector The titleSelector option can be used to customise the elements that will be used to generate the slide titles in the menu. The default option selects the first heading element found in the slide. For example\u0026hellip;\n\u0026lt;section\u0026gt; \u0026lt;h3\u0026gt;This will be the slide title in the menu\u0026lt;/h3\u0026gt; \u0026lt;h1\u0026gt;Title\u0026lt;/h1\u0026gt; \u0026lt;p\u0026gt;...\u0026lt;/p\u0026gt; \u0026lt;/section\u0026gt; Any valid CSS selector should work but note the selector will only be applied to elements contained within the slide section. You could use the 'h1' selector to only use level 1 headings or 'p' to use the first paragraph element. For example, titleSelector: 'p.lead' would be used like this\u0026hellip;\n\u0026lt;section\u0026gt; \u0026lt;h1\u0026gt;Title\u0026lt;/h1\u0026gt; \u0026lt;p class=\u0026#34;lead\u0026#34;\u0026gt;This will be the slide title in the menu\u0026lt;/p\u0026gt; \u0026lt;p\u0026gt;...\u0026lt;/p\u0026gt; \u0026lt;/section\u0026gt; Using titleSelector: '' will ignore all elements and no title will be provided, unless the slide section contains a data-menu-title attribute or an element with the menu-title class.\n4. No title is provided If no title can be found using the above methods, a default title incorporating the slide number will be used. For example, the following would result in a slide title in the format of \u0026lsquo;Slide 12\u0026rsquo;\u0026hellip;\n\u0026lt;section\u0026gt; \u0026lt;p\u0026gt;...\u0026lt;/p\u0026gt; \u0026lt;/section\u0026gt; If the hideMissingTitles option is set to true, however, the slide will not be listed in the menu.\nCustom Menu Panels Additional custom panels can be added the menu using the custom option.\nReveal.initialize({ // ... menu: { // ... custom: [ { title: \u0026#39;Links\u0026#39;, icon: \u0026#39;\u0026lt;i class=\u0026#34;fa fa-external-link\u0026#34;\u0026gt;\u0026#39;, src: \u0026#39;links.html\u0026#39; }, { title: \u0026#39;About\u0026#39;, icon: \u0026#39;\u0026lt;i class=\u0026#34;fa fa-info\u0026#34;\u0026gt;\u0026#39;, content: \u0026#39;\u0026lt;p\u0026gt;This slidedeck is created with reveal.js\u0026lt;/p\u0026gt;\u0026#39; } ] } }); title and icon are used for the toolbar buttons at the top of the menu. There are two approaches you can use to provide content for the panels\u0026hellip;\nYou can provide a URL in src to load html from another file. Alternatively, you can provide html in content and this will be added to the custom panel. Custom slide menu items You can provide menu items in your custom panels using the following format. This allows you to define your own navigation links for your presentation.\n\u0026lt;h1\u0026gt;Links\u0026lt;/h1\u0026gt; \u0026lt;ul class=\u0026#34;slide-menu-items\u0026#34;\u0026gt; \u0026lt;li class=\u0026#34;slide-menu-item\u0026#34;\u0026gt;\u0026lt;a href=\u0026#34;#/transitions\u0026#34;\u0026gt;Transitions\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;li class=\u0026#34;slide-menu-item\u0026#34;\u0026gt;\u0026lt;a href=\u0026#34;#/13\u0026#34;\u0026gt;Code highlighting\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;/ul\u0026gt; You are not limited to linking to presentation slides. You can provide any link you wish.\n\u0026lt;h1\u0026gt;External Links\u0026lt;/h1\u0026gt; \u0026lt;ul class=\u0026#34;slide-menu-items\u0026#34;\u0026gt; \u0026lt;li class=\u0026#34;slide-menu-item\u0026#34;\u0026gt; \u0026lt;a href=\u0026#34;https://github.com/denehyg/reveal.js-menu\u0026#34;\u0026gt;Reveal.js-menu\u0026lt;/a\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li class=\u0026#34;slide-menu-item\u0026#34;\u0026gt; \u0026lt;a href=\u0026#34;https://github.com/hakimel/reveal.js\u0026#34;\u0026gt;Reveal.js\u0026lt;/a\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;/ul\u0026gt; Using menu items enables keyboard navigation of your links as with the other panels. However, you don\u0026rsquo;t have to use menu items for your links. You can simply provide standard links and unordered lists in your html. Notice you can provide your custom menu items mixed with other html if you wish.\nReady Event A \u0026lsquo;menu-ready\u0026rsquo; event is fired when reveal.js-menu has loaded all non-async dependencies and is ready to start navigating.\nReveal.addEventListener(\u0026#39;menu-ready\u0026#39;, function (event) { // your code }); API The RevealMenu object exposes a JavaScript API for controlling the menu:\nFunction Description toggle(event) Toggles the open state of the menu, ie open if it is closed, and close if it is open openMenu(event) Opens the menu closeMenu(event, force) Closes the menu. To force the menu to close (ie when sticky option is true) call closeMenu(null, true) openPanel(event, ref) Opens the menu to a specific panel, passing the name of the panel or the panel element itself isOpen() Returns true if the menu is open initialiseMenu() Initialises the menu if it has not already been initialised. Used in conjunction with the delayInit option isMenuInitialised() Returns true if the menu has been initialised Compatibility reveal.js-menu v2.0 is built for reveal.js v4. It will not work with reveal.js v3. If you require a menu for reveal.js v3 you will need to install reveal.js-menu v1.2.0.\nv2.0 also introduces API changes that are not backwards compatible. init() has been renamed to initMenu() to deconflict with the reveal.js v4 plugin API. isInit() has also been changed to isMenuInitialised().\nLicense MIT licensed\nCopyright (C) 2020 Greg Denehy\n"
},
{
	"uri": "https://mszturc.github.io/obsidian-advanced-slides/",
	"title": "Advanced Slides Documentation",
	"tags": [],
	"description": "",
	"content": "Create Awesome Presentations in Obsidian Advanced Slides is an open source plugin for Obsidian that allows you to create reveal.js based presentations in Obsidian. With this tool anyone who is able to create a note in Obsidian can also create a beautiful presentation.\nWe follow the philosophy of convention over configuration, which means that in most cases it is sufficient to simply write a Slide in Obsidian Markdown syntax. Main features Live Preview while editing your slides markdown Theme support for your slides Embed Support - include other Markdown documents in slides - ![[Note.md#FirstChapter]] Image Support include images through Obsidian Synthax - ![[picture.jpg]] pipe image properties - - ![[image.png|100x100]] Block Support - ::: block Footnote Support - Here's a footnote[^1] Define stylesheets inside Markdown - \u0026lt;style\u0026gt;....\u0026lt;/style\u0026gt; Pass options To Slide Compiler through frontmatter Annotate elements \u0026lt;!-- element class=\u0026quot;red\u0026quot; --\u0026gt; Support for internal links [[Note]] will be rendered as normal text in Presentation with aliases [[Note|My Note]] Excalidraw Support Mermaid Support Call for Help You have coding skills and you are missing a proper Slides functionality as much as me and want to help? Join us, there is enough work to do Contribute to this documentation Feel free to update this content, just click the Improve this page link displayed on top right of each page, and pullrequest it Your modification will be deployed automatically when merged ! "
},
{
	"uri": "https://mszturc.github.io/obsidian-advanced-slides/categories/",
	"title": "Categories",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://mszturc.github.io/obsidian-advanced-slides/credits/",
	"title": "Credits",
	"tags": [],
	"description": "contributors and packages used by Advanced Slides",
	"content": "github contributors @MSzturc 635 commits @actions-user 89 commits @Coffelius 3 commits @rxian 3 commits @miluoshi 2 commits @jacobmarble 1 commits @axelson 1 commits @Michael-Beukman 1 commits @Plexipop 1 commits @scokobro 1 commits @code-factor 1 commits Packages and libraries obsidian - A knowledge base that works on local Markdown files reveal-js - The HTML Presentation Framework mermaid - generation of diagram and flowchart from text in a similar manner as markdown font awesome - the iconic font and CSS framework "
},
{
	"uri": "https://mszturc.github.io/obsidian-advanced-slides/tags/",
	"title": "Tags",
	"tags": [],
	"description": "",
	"content": ""
}]